<?xml version="1.0"?>
<doc>
    <assembly>
        <name>obj\Release\LuminUnity</name>
    </assembly>
    <members>
        <member name="T:UnityEngine.XR.MagicLeap.InvalidInstanceException">
            <summary>
            Simple custom exception for instance error checking
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.InvalidInstanceException.#ctor(System.String)">
            <summary>
            Constructor to create an InvalidInstanceException with a message.
            </summary>
            <param name="message">Message to provide in the exception</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLAPISingleton`1">
            <summary>
            MLAPISingleton class contains a template for singleton APIs
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLAPISingleton`1._instance">
            <summary>
            Singleton object instance.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLAPISingleton`1.DllNotFoundError">
            <summary>
            Error message displayed to user when API dll was not found
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Instance">
            <summary>
            Returns the singleton object instance.
            </summary>
            <returns>The singleton object instance.</returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLAPISingleton`1.IsStarted">
            <summary>
            Determine if the API was started successfully
            </summary>
            <returns> Returns false if no instance exists</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.IsValidInstance">
            <summary>
            Utility function returns true is the instance exists
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.CheckValidInstance">
            <summary>
            Utility function checks for valid instance and throws an execption if not found
            </summary>
            <throw> InvalidInstanceException </throw>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.BaseStart">
            <summary>
            Utility function set up instance and tracks successfull _startCount
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error (no device, dll not found, no API symbols).
            Otherwise, see specific implemetation of StartAPI()
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Stop">
            <summary>
            Stop the API
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Finalize">
            <summary>
            MLAPISingleton finalizer used to ensure we dispose data correctly.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.StopAPI">
            <summary>
            Decrement API instance count and cleanup if this is the last one.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.StartAPI">
            <summary>
            Do API specific creation/initialization of ML resources for this API
            such as create trackers.
            </summary>
            \endinternal</member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
            <param name="isSafeToAccessManagedObjects">Boolean that tells if it is safe to clear managed memory</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.Update(System.Single,System.IntPtr)">
            <summary>
            Update function registered with MagicLeapDevice to do API specific per frame work.
            </summary>
            <param name="timeDelta">The time in seconds it took to complete the last frame.</param>
            <param name="perceptionSnapshot">The current perception snapshot</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLAPISingleton`1.OnApplicationPause(System.Boolean)">
            <summary>
            Callback sent to all MagicLeap APIs on application pause.
            </summary>
            <param name="pauseStatus">True if the application is paused, else False. </param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCamera">
            <summary>
            MLCamera class exposes static functions to query camera related
            functions. Most functions are currently a direct pass through functions to the
            native C-API functions and incur no overhead.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera.PreviewTextureWidth">
            <summary>
            Width of the internal camera preview texture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera.PreviewTextureHeight">
            <summary>
            Height of the internal camera preview texture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCamera._queuedActions">
            <summary />
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceAvailable">
            <summary>Camera status callback, device available.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceUnavailable">
            <summary>Camera status callback, device unavailable.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceOpened">
            <summary>Camera status callback, device opened.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceClosed">
            <summary>Camera status callback, device closed.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceDisconnected">
            <summary>Camera status callback, device disconnected.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceError">
            <summary>Camera status callback, device error.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureStarted">
            <summary>Camera capture callback, capture started.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureFailed">
            <summary>Camera capture callback, capture failed.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureBufferLost">
            <summary>Camera capture callback, capture buffer lost.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureProgressed">
            <summary>Camera capture callback, capture progressed.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureCompleted">
            <summary>
            Camera capture callback, capture completed.
            Video capture will execute a capture completed callback every frame.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureCompletedSettings">
            <summary>
            Camera capture callback, capture completed with settings results from the capture.
            A Video capture will cause this callback to execute on every video frame capture.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnRawImageAvailable">
            <summary>Camera capture callback, capture raw image available.</summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLCamera.OnRawImageAvailableYUV">
            <summary>Camera capture callback, capture raw image available, parameters are Y array, U array, V array</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.Settings">
            <summary>
            Camera settings object for setting or getting camera settings
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.Previewing">
            <summary>
            Camera Preview is enabled and texture is being rendered to
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCamera.PreviewTexture2D">
            <summary>
            Texture that has the camera preview rendered to it when Previewing
            null when preview is not available yet.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.QueueCallback(System.Action)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CreateInstance">
            <summary>
            static instance of the MLCamera class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Start">
            <summary>
            Starts the Camera API.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartAPI">
            <summary>
            Start Camera API and set up callbacks.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Update(System.Single,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Connect">
            <summary>
            Connect to camera resource and register callbacks.
            Only one connection to the camera resource is supported at a time.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed to connect to camera device due to null pointer.
            MLResult.Code will be MLResultCode.Timeout if failed to connect to camera device due to timeout.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.Disconnect">
            <summary>
            Disconnect from camera resource and unregister callbacks.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.DisconnectNative">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CaptureImage(System.String)">
            <summary>
            Captures an image from the camera and writes a jpeg to the specified path.
            </summary>
            <param name="filePath">Path to write the captured image.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed due to null pointer.
            MLResult.Code will be MLMediaGenericResult.BadType if failed due to invalid capture type.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if failed due to on-going video recording.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.Timeout if failed due to timeout.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.CaptureRawImageAsync(UnityEngine.XR.MagicLeap.MLCameraOutputFormat)">
            <summary>
            Initiates a raw image capture request.  Register to OnRawImageAvailable event to get result if format is JPEG.
            OnRawImageAvailableYUV to get result if format is YUV_420_888
            </summary>
            <param name="outputFormat">MLCameraOutputFormat of the output type</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed due to null pointer.
            MLResult.Code will be MLMediaGenericResult.BadType if failed due to invalid capture type.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if failed due to on-going video recording.
            MLResult.Code will be MLResultCode.Timeout if failed due to timeout.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartVideoCapture(System.String)">
            <summary>
            Starts capturing a video to write as an MP4 to the specified path.
            </summary>
            <param name="filePath">Path to write the video.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed due to null pointer.
            MLResult.Code will be MLMediaGenericResult.BadType if failed to prepare for capture due to invalid capture type.
            MLResult.Code will be MLResultCode.Timeout if failed due to timeout.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StopVideoCapture">
            <summary>
            Stops capturing a video and write as an MP4 to the path specified with StartVideoCapture().
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed due to null pointer.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed to start video recording due to internal error.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.PrepareCapture(UnityEngine.XR.MagicLeap.MLCameraCaptureType,UnityEngine.XR.MagicLeap.MLCameraCaptureSettings@)">
            <summary>
            Prepare a capture for manual submission, allowing modifying of the capture settings.
            </summary>
            <param name="captureType">The type of capture you will be submitting. This must match the capture type of SubmitCapture()</param>
            <param name="captureSettings">Structure containing all of the existing capture settings that can be viewed or modified. Must be passed into SubmitCapture</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed to prepare for capture due to invalid input parameter.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed to prepare for capture due to null pointer.
            MLResult.Code will be MLMediaGenericResult.BadType if failed to prepare for capture due to invalid capture type.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed to prepare for capture due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.SubmitCapture(UnityEngine.XR.MagicLeap.MLCameraCaptureSettings@,System.String)">
            <summary>
            Submit a previously prepared capture and execute the capture itself.
            If MLCameraCaptureType.Video is submitted, users must call StopVideoCapture() to stop capture at a later time.
            </summary>
            <param name="captureSettings">Structure containing the settings used for this capture</param>
            <param name="filePath">When captureType is of type Video or Image (but not ImageRaw), filePath must be a valid target path for the output capture</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if failed to capture image due to on-going video recording.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed to start capture or recording due to null pointer.
            MLResult.Code will be MLResultCode.InvalidParam if failed to start capture or recording due to invalid input parameter.
            MLResult.Code will be MLResultCode.Timeout if failed to start capture or recording due to timeout.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed to start video recording due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.GetErrorCode">
            <summary>
            Returns the most recent error code.
            </summary>
            <returns>Most recent MLCameraError.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceAvailableCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceUnavailableCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceOpenedCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceClosedCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceDisconnectedCallback(System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnDeviceErrorCallback(UnityEngine.XR.MagicLeap.MLCameraError,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureStartedCallback(UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureFailedCallback(UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureBufferLostCallback(UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureProgressedCallback(System.UInt64,UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnCaptureCompletedCallback(System.UInt64,UnityEngine.XR.MagicLeap.MLCameraResultExtras@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnImageBufferAvailableCallback(UnityEngine.XR.MagicLeap.MLCameraOutput@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartPreview(UnityEngine.Texture2D)">
            <summary>
            Begin previewing the camera image for a live feed. StopPreview() must be called when finished
            Camera must be connected first with Connect()
            </summary>
            <param name="texture">Texture reference that the live footage should be drawn on</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if the texture passed in is invalid (null)
            MLResult.Code will be MLResultCode.UnspecifiedFailure if some other failure occured.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StartPreview">
            <summary>
            Begin previewing the camera image for a live feed. StopPreview() must be called when finished
            Camera must be connected first with Connect()
            </summary>
            <returns>The texture that the live footage will be drawn on. null is returned if any errors occured</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.OnApplicationPause(System.Boolean)">
            <summary>
            Handle the application pause callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCamera.StopPreview">
            <summary>
            Stop previewing the live camera feed.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if you are calling stop without having already started previewing.
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings">
            <summary>
            Camera characteristics and settings
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRangeValues">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRangeValues.Minimum">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRangeValues.Maximum">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Top">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Right">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySizeValues.Bottom">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivtyRangeValues">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivtyRangeValues.Minimum">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivtyRangeValues.Maximum">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRangeValues">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRangeValues.Minimum">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRangeValues.Maximum">
            <summary>
            Only the Maximum exposure time range can be modified.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSize">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSize.Width">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSize.Height">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.AvailableFormats">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.AvailableStreamConfigurations">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.Width">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraSettings.StreamConfiguration.Height">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAEModesAvailable">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ColorCorrectionAberrationModesAvailable">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAWBModesAvailable">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerProcessedSizes">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ScalerAvailableStreamConfigurations">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationRange">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoActiveArraySize">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoSensitivityRange">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorInfoExposureTimeRange">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationStepNumerator">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationStepDenominator">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AECompensationStep">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.AvailableMaxDigitalZoom">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAELockAvailable">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.ControlAWBLockAvailable">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraSettings.SensorOrientation">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraSettings.Apply">
            <summary>
            Apply any changes made to the MLCameraSettings properties.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLMediaGenericResult.UnexpectedNull if failed to connect to camera characteristic due to null pointer.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings">
            <summary>
            Settings that are specific to a submitted capture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionTransform">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionGains">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAETargetFPSRange">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ScalerCropRegion">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ColorCorrectionAberrationMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAEAntibandingMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.AEExposureCompensation">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAELock">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAEMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAWBLock">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.ControlAWBMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.SensorExposureTime">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraCaptureSettings.SensorSensitivity">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraResultSettings">
            <summary>
            Settings that are specific to a result of a capture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionTransform">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionAberrationMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ColorCorrectionGains">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAEAntibandingMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.AEExposureCompensation">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAELock">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAEMode">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAETargetFPSRange">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAEState">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAWBLock">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ControlAWBState">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorExposureTime">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorSensitivity">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorTimestamp">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.ScalerCropRegion">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraResultSettings.SensorFrameDuration">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLDispatcher">
            <summary>
            This interface is to let an application query the platform to handle things
            that the app itself cannot or wants someone else to handle.
            For example, if an application comes across a schema tag that it doesn't know
            what to do with, it can query the patform to see if some other application might.
            This can be useful for handling http://, https:// or other customSchema://&lt;arg1&gt;/&lt;arg2&gt;
            Apart from handling schema tags in URIs, this interface can also be used
            to query the platform to handle a type of file based on file-extension or mime-type
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLDispatcher.TryOpenAppropriateApplication(System.String)">
            <summary>
            Try to open the application that is registered to support the given URI.
            </summary>
            <param name="uri"> The URI to pass into the dispatch service.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be an MLDispatchResult if a dispatch specific error occurred.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLDispatcher.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLEye">
            <summary>
            Class used to respresent a single eye.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEye.#ctor(UnityEngine.XR.MagicLeap.MLEye.EyeType,MagicLeapInternal.EyeApiNativeBindings.MLEyeTrackingStaticData@)">
            <summary>
            Constructor to initialize this class based on the desired eye type.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLEye.EyeType">
            <summary>
            Enumeration to specify which eye.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEye.EyeType.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEye.EyeType.Right">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEye.m_CenterCoordinateFrame">
            <summary>
            MagicLeap coordinate frame information for this eye's center.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEye._transform">
            <summary>
            Generic magicleap transform used to query data from native library.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.Type">
            <summary>
            Return this class' eye type.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.Center">
            <summary>
            Return eye center.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.IsBlinking">
            <summary>
            Return true if eye is inside a blink.
            Set to false before initial update.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEye.CenterConfidence">
            <summary>
            Return confidence value for eye center. Will be 0 if
            no eye detected - when not wearing the device or closed eye.
            Initial value is set to 0 before the first update.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEye.Update(System.IntPtr,System.Single,System.Boolean)">
            <summary>
            Update call used to get the latest data for this eye from a perception snapshot and information sent from MLEyes current State.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLEyes">
            <summary>
            MLEyes class contains all Eye tracking data for both left and right eyes.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.#ctor">
            <summary>
            MLEyes constructor.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes.OnFixationDepthComfortChanged">
            <summary>
            Event is triggered when the fixation comfort state has changed.
            (bool comfortable)
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes.OnFixationDepthViolationOccurred">
            <summary>
            Event is triggered when a depth violation occurs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes.OnFixationDepthViolationCleared">
            <summary>
            Event is triggered once a depth violation has been cleared.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._rightEye">
            <summary>
            Right eye class used to get right eye specific data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._leftEye">
            <summary>
            Left eye class used to get right eye specific data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._nativeTracker">
            <summary>
            MagicLeap native eye tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._staticData">
            <summary>
            MagicLeap eye tracker static data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._state">
            <summary>
            MagicLeap eye tracker state data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._transform">
            <summary>
            Generic magicleap transform used to query data from native library.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._fixationPoint">
            <summary>
            Fixation point.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._fixationComfortable">
            <summary>
            The current state of the fixation comfort.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLEyes._fixationViolation">
            <summary>
            The current state of the fixation violation.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.LeftEye">
            <summary>
            Left eye class used to get left eye specific data.
            </summary>
            <returns> Returns reference to left eye. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.RightEye">
            <summary>
            Right eye class used to get right eye specific data.
            </summary>
            <returns> Returns reference to right eye. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.FixationConfidence">
            <summary>
            A quality metric to indicate how accurate the gaze will be..
            </summary>
            <returns> Returns confidence value to indicate accuracy of fixation point. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.CalibrationStatus">
            <summary>
            What the status of eye calibration is.
            </summary>
            <returns> Returns the status of eye calibration. </returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.IsFixationDepthUncomfortable">
            <summary>
            Is the users fixation point too close for sustained use. This value is true if the user is
            focused on a point that is within the near clip distance of the eyeball centers.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.RemainingTimeAtUncomfortableDepth">
            <summary>
            Number of seconds remaining that the user may be fixated at an uncomfortable depth. If this
            persists for too long, the system may take action to move the fixation point further away.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.MaximumTimeAtUncomfortableDepth">
            <summary>
            Maximum number of seconds that the user may be fixated at an uncomfortable depth.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.HasFixationDepthViolationOccurred">
            <summary>
            True if the user has fixated on a point closer than the near clip distance for longer than 10 seconds within
            the last minute.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLEyes.FixationPoint">
            <summary>
            Fixation point.
            </summary>
            <returns> Returns fixtion point of users eyes. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.CreateInstance">
            <summary>
            static instance of the MLEyes class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.Start">
            <summary>
            Starts the Eyes API.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.StartAPI">
            <summary>
            Starts the eye object requests, Must be called to start receiving eye tracker data from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.InitNativeTracker">
            <summary>
            Create native eye tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.InitEyes">
            <summary>
            Initialize eye data by pulling native tracker data and the individual eye classes.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.DestroyNativeTracker">
            <summary>
            Destroy the native tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.Update(System.Single,System.IntPtr)">
            <summary>
            Update all eye data.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.UpdateState">
            <summary>
            Update eye tracker state.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLEyes.UpdateFixationPoint(System.IntPtr)">
            <summary>
            Update fixation point data.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLKeyPoseManager">
            <summary>
            Manages what KeyPoses are enabled and exposes the events.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.#ctor(System.UInt64,UnityEngine.XR.MagicLeap.MLHand,UnityEngine.XR.MagicLeap.MLHand)">
            <summary />
            <param name="nativeTrackerHandle">Native hand tracker handle.</param>
            <param name="leftHand">Left hand to which MLKeyPoseManager will subscribe for events.</param>
            <param name="rightHand">Right hand to which KeyPoseManager will subscribe for events.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLKeyPoseManager.OnHandKeyPoseBegin">
            <summary>
            Event is raised whenever a HandKeyPose starts being recognized.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLKeyPoseManager.OnHandKeyPoseEnd">
            <summary>
            Event is raised whenever a HandKeyPose stops being recognized.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoseManager.EnabledHandKeyPoses">
            <summary>
            Gets the currently enabled hand key poses.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoseManager.KeyPointsFilterLevel">
            <summary>
            Gets the keypoints filter level
            </summary>
            <returns>The filter level.</returns>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoseManager.PoseFilterLevel">
            <summary>
            Gets the pose filter level
            </summary>
            <returns>The filter level.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.DisableAllKeyPoses">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.EnableKeyPoses(UnityEngine.XR.MagicLeap.MLHandKeyPose[],System.Boolean,System.Boolean)">
            <summary>
            Enables or disables an array of KeyPoses.
            </summary>
            <param name="keyPoses" />
            <param name="value">Enable or disable KeyPoses.</param>
            <param name="explicitEnable">
            If true, and if parameter value is also true, only the list of provided KeyPoses
            is enabled, all other previously enabled KeyPoses get disabled. No effect if
            parameter value is false.
            </param>
            <remarks>
            Enabling too many KeyPoses will currently lead to decreased sensitivity to each
            individual KeyPose.
            </remarks>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.SetKeyPointsFilterLevel(UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel)">
            <summary>
            Sets the keypoints filter level
            </summary>
            <param name="filterLevel">The desired filter level</param>
            <returns>true if the filter level was successfully applied and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.SetPoseFilterLevel(UnityEngine.XR.MagicLeap.MLPoseFilterLevel)">
            <summary>
            Sets the pose filter level
            </summary>
            <param name="filterLevel">The desired filter level</param>
            <returns>true if the filter level was successfully applied and false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoseManager.LastConfigurationApplied">
            <summary>
            Returns whether the settings have actually been applied to the active configuration.
            </summary>
            <returns>true if the settings have actually been applied to the active configuration and false otherwise.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLKeyPoint">
            <summary>
            This class contains the valid state and current position of the KeyPoint.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLKeyPoint.#ctor(System.Boolean)">
            <summary>
            Initialize the KeyPoint.
            </summary>
            <param name="valid">The valid state of the KeyPoint.</param>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoint.IsValid">
            <summary>
            Returns the valid state of the KeyPoint.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLKeyPoint.Position">
            <summary>
            Returns the position of the KeyPoint.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLFinger">
            <summary>
            MLFinger contains joint information about the finger instance.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLFinger.#ctor(MagicLeapInternal.HandTrackingApiNativeBindings.MLFingerState)">
            <summary>
            Initializes a new instance of the MLFinger class.
            </summary>
            <param name="state">
            </param>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.Tip">
            <summary>
            The Tip of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.DIP">
            <summary>
            The Distal-interphalangeal joint of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.PIP">
            <summary>
            The Proximal-interphalangeal joint of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.MCP">
            <summary>
            The Metacarpal phalangeal joint of the finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLFinger.KeyPoints">
            <summary>
            All valid keypoints combined into a list.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLFinger.Update(System.IntPtr)">
            <summary>
            Updates the state of the finger.
            </summary>
            <param name="perceptionSnapshot">
            </param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLThumb">
            <summary>
            MLThumb contains joint information about the thumb instance.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLThumb.#ctor(MagicLeapInternal.HandTrackingApiNativeBindings.MLThumbState)">
            <summary>
            Initializes a new instance of the MLThumb class.
            </summary>
            <param name="state">
            </param>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.Tip">
            <summary>
            The Tip of the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.IP">
            <summary>
            The Interphalangeal joint of the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.MCP">
            <summary>
            The Metacarpophalangeal joint of the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.CMC">
            <summary>
            The Carpals-Metacarpals for the thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLThumb.KeyPoints">
            <summary>
            All valid keypoints combined into a list.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLThumb.Update(System.IntPtr)">
            <summary>
            Updates the state of the thumb.
            </summary>
            <param name="perceptionSnapshot">
            </param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWrist">
            <summary>
            MLWrist contains joint information about the wrist instance.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWrist.#ctor(MagicLeapInternal.HandTrackingApiNativeBindings.MLWristState)">
            <summary>
            Initializes a new instance of the MLWrist class.
            </summary>
            <param name="state">
            </param>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.Center">
            <summary>
            The center of the  wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.Ulnar">
            <summary>
            The Ulnar of the wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.Radial">
            <summary>
            The Radial of the wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLWrist.KeyPoints">
            <summary>
            All valid keypoints combined into a list.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWrist.Update(System.IntPtr)">
            <summary>
            Updates the state of the MLWrist.
            </summary>
            <param name="perceptionSnapshot">
            </param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHand">
            <summary>
            MLHand contains the hand tracking data including gestures,
            hand centers and key points for a specific hand.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHand.#ctor(UnityEngine.XR.MagicLeap.MLHandType,MagicLeapInternal.HandTrackingApiNativeBindings.MLHandTrackingStaticHandState)">
            <summary>
            Initializes a new instance of the MLHand" class.
            </summary>
            <param name="handType">Hand type.</param>
            <param name="handState">The static hand state.</param>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLHand.OnKeyPoseBegin">
            <summary>
            Event is raised whenever a KeyPose starts being recognized for this hand.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLHand.OnKeyPoseEnd">
            <summary>
            Event is raised whenever a KeyPose stops being recognized for this hand.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.KeyPose">
            <summary>
            Gets currently recognized KeyPose.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.KeyPoseConfidence">
            <summary>
            The confidence value of the requested KeyPose, between [0, 1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.KeyPoseConfidenceFiltered">
            <summary>
            The filtered confidence value of the requested KeyPose, between [0, 1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.HandType">
            <summary>
            Gets the Hand Type (left or right)
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Thumb">
            <summary>
            Gets the Thumb.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Index">
            <summary>
            Gets the Index finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Middle">
            <summary>
            Gets the Middle finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Ring">
            <summary>
            Gets the Ring finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Pinky">
            <summary>
            Gets the Pinky finger.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Wrist">
            <summary>
            Gets the Wrist.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.Center">
            <summary>
            Gets hand center.
            Remains in same location if hand is not detected.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.NormalizedCenter">
            <summary>
            Gets normalized center of the hand.
            Remains in same location if hand is not detected.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHand.HandConfidence">
            <summary>
            The confidence value of the hand, between [0, 1].
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHand.GetKeyPoseUp(UnityEngine.XR.MagicLeap.MLHandKeyPose)">
            <summary>
            Returns true if the KeyPose stops being recognized on Update.
            </summary>
            <param name="keyPose" />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHand.GetKeyPoseDown(UnityEngine.XR.MagicLeap.MLHandKeyPose)">
            <summary>
            Returns true if the KeyPose starts being recognized on Update.
            </summary>
            <param name="keyPose" />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHand.Update(MagicLeapInternal.HandTrackingApiNativeBindings.MLHandTrackingHandState,System.IntPtr)">
            <summary>
            Updates MLHand state variables. Note: It's not advisable
            to call this outside the context of the MLHands and MLKeyPoseManager
            </summary>
            <param name="newState">New state.</param>
            <param name="perceptionSnapshot">Perception snapshot.</param>
            <returns>
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHands">
            <summary>
            MLHands is the entry point for all the hand tracking data
            including gestures, hand centers and key points for both hands.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHands._right">
            <summary>
            Right hand class used to get right hand specific data.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHands._left">
            <summary>
            Left hand class used to get left hand specific data.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHands.KeyPoseManager">
            <summary>
            KeyPose Manager if the instance.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHands.Left">
            <summary>
            Left hand.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLHands.Right">
            <summary>
            Right hand.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.CreateInstance">
            <summary>
            static instance of the MLHands class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.Start">
            <summary>
            Starts the Hands API.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.StartAPI">
            <summary>
            Start tracking hands with all KeyPoses disabled.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
            <param name="isSafeToAccessManagedObjects">Allow complete cleanup of the API.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLHands.Update(System.Single,System.IntPtr)">
            <summary>
            Updates the KeyPose state based on the provided snapshot.
            </summary>
            <param name="timeDelta">The amount of time (in seconds) that has passed since the last call to Update().</param>
            <param name="perceptionSnapshot">A snapshot of the observed world state at the current update time.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLIdentityAttribute">
            <summary>
            MLIdentityAttribute represents an attribute of a user's profile
            (for instance: name, address, email). Each attribute has a name (represented by key and value).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Key">
            <summary>
            The enum value.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Name">
            <summary>
            Attribute Name.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Value">
            <summary>
            Attribute's string value. Call GetValueAs* functions to get
            the value of the attribute as other types (eg. int, float etc )
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.IsRequested">
            <summary>
            The is requested.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityAttribute.IsGranted">
            <summary>
            The is granted.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLIdentityAttribute.IsDirty">
            <summary>
            Gets or sets a value indicating whether this attribute is dirty.
            </summary>
            <value>
                <c>true</c> if is dirty; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityAttribute.GetValueAsFloat">
            <summary>
            Gets the value as float.
            </summary>
            <returns>The value as float.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityAttribute.GetValueAsInt">
            <summary>
            Gets the value as int.
            </summary>
            <returns>The value as int.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Update(System.Int32)">
            <summary>
            update with the new value
            </summary>
            <returns>The update.</returns>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Update(System.String)">
            <summary>
            Update the specified newValue.
            </summary>
            <returns>The update.</returns>
            <param name="newValue">New value.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityAttribute.Update(System.Single)">
            <summary>
            Update the specified newValue.
            </summary>
            <returns>The update.</returns>
            <param name="newValue">New value.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.InternalMLIdentityProfile">
            <summary>
            Internal raw representation of C API's MLIdentityProfile.
            MLIdentityProfile represents a set of attribute of a user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.InternalMLIdentityProfile.AttributeCount">
            <summary>
            attributeCount is the number of MLIdentityAttribute structures pointed
            to by attributePtrs.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.InternalMLIdentityProfile.AttributePtrs">
            <summary>
            attributePtrs is an array of MLIdentityAttributes containing user profile
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLIdentityProfile">
            <summary>
            Public represenation of MLIdentityProfile.
            MLIdentityProfile represents a set of attribute of a user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile.RequestAttributes">
            <summary>
            Optionally specific attributes to request for this profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile._profilePtr">
            <summary>
            Internal pointer used to associate the the managed version of this structure
            with the unmanaged pointer that is used by the Identity API to communicate with us.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile._profile">
            <summary>
            Internal convenience structure which represents the marshaled unmanaged structure
            to communicate with the Identity API.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityProfile._request">
            <summary>
            Request class used to keep track of pending requests for ideneity data.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLIdentityProfile.IsValid">
            <summary>
            Public property to check if internal pointer and hence this profile is valid.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLIdentityProfile.Attributes">
            <summary>
            Array of MLIdentityAttributes containing user profile.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityProfile.Fetch(System.Action{UnityEngine.XR.MagicLeap.MLResult})">
            <summary>
            Fetch the specified attributes and callback when result is known.
            </summary>
            <param name="callback">
            MLResult.Code in callback will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if caller does not have the IdentityRead privilege.
            MLResult.Code will be an MLIdentityResult if an identity specific failure occurred during the operation.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Pending if successful (request will be pending).
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if caller does not have the IdentityRead privilege.
            MLResult.Code will be an MLIdentityResult if an identity specific failure occurred during the operation.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLIdentityProfile.Cleanup">
            ReleaseUserProfile releases all resources associated with the</member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus">
            <summary>
            Identifies the status of an image target.
            Each MLImageTargetResult will include a ImageTrackerTargetStatus
            giving the current status of the target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus.Tracked">
            <summary>
            Image target is tracked.
            The image tracker system will provide a 6 DOF pose when queried using
            MLSnapshotGetTransform function.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus.Unreliable">
            <summary>
            Image target is tracked with low confidence.
            The image tracker system will still provide a 6 DOF pose. But this
            pose might be inaccurate and might have jitter. When the tracking is
            unreliable one of the following two events will happen quickly : Either the
            tracking will recover to MLImageTrackerTargetStatus_Tracked or tracking
            will be lost and the status will change to
            MLImageTrackerTargetStatus_NotTracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetTrackingStatus.NotTracked">
            <summary>
            Image target is lost.
            The image tracker system will not report any pose for this target. Querying
            for the pose using MLSnapshotGetTransform will return false.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTargetResult">
            <summary>
            Represents the image target result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetResult.Position">
            <summary>
            Position of the target.
            This is not valid if the target is not being tracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetResult.Rotation">
            <summary>
            Orientation of the target.
            This is not valid if the target is not being tracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTargetResult.Status">
            <summary>
            Status of the target.
            Every target will have an associated status indicating the current
            tracking status.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTarget">
            <summary>
            Manages the image target settings.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.#ctor(System.String,UnityEngine.Texture2D,System.Single,System.Action{UnityEngine.XR.MagicLeap.MLImageTarget,UnityEngine.XR.MagicLeap.MLImageTargetResult},System.UInt64,System.Boolean)">
            <summary>
            Constructs the MLImageTarget object with specified parameters.
            <param name="name"> Image target's name. </param><param name="image">
            Texture2D representing the image target.
            The size of the texture should not be changed. Set the "Non Power of 2" property of Texture2D to none.
            </param><param name="longerDimension"> Longer dimension of the image target in scene units. Default is meters. </param><param name="callback"> Tracking result callback for this image target. </param><param name="trackerHandle"> Handle for the image tracker. </param><param name="isStationary">
            Set this to true if the position of this image target in the physical world is fixed and its surroundings
            are planar (ex: walls, floors, tables, etc).
            </param></summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTarget._targetHandle">
            <summary>
            The internal ML_HANDLE used to reference this image target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTarget._trackerHandle">
            <summary>
            The internal ML_HANDLE used to reference the tracker for this target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTarget.TargetSettings">
            <summary>
            Reference to the image target's settings.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLImageTarget.IsValid">
            <summary>
            Check the validity of the image target.
            </summary>
            <returns> true if the target is valid, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.Finalize">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.Dispose">
            <summary>
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.Cleanup">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.Update(System.IntPtr)">
            <summary>
            Updates the image target tracking data.
            Callback (if any) is called with the updated result.
            </summary>
            <param name="snapshot">The current ML snapshot.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.UpdateTrackingData(System.IntPtr)">
            <summary>
            Updates this image target's tracking data, status, and transforms.
            </summary>
            <returns> true if the result was successfully retrieved, false otherwise. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.GetTargetLongerDimension">
            <summary>
            Get the longer dimension of the image target.
            </summary>
            <returns> longer dimension in scene units.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTarget.SetTargetLongerDimension(System.Single)">
            <summary>
            Set the longer dimension of the image target.
            </summary>
            <param name="longerDimension"> Longer dimension in scene units. Default is meters.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTracker">
            <summary>
            MLImageTracker manages the Image Tracker system.
            Image Tracker enables experiences that recognize 2D planar images
            (image targets) in the physical world. It provides the position and
            orientation of the image targets in the physical world.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.#ctor">
            <summary>
            Initialize the target list.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTracker._handle">
            <summary>
            The internal ML_HANDLE used to reference this tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTracker._targetList">
            <summary>
            The list of targets currently being tracked by this image tracker.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTracker._trackerSettings">
            <summary>
            The list of settings for this image tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.CreateInstance">
            <summary>
            Static instance of the MLImageTracker class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Start">
            <summary>
            Start the image tracker with the defined settings.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Start(UnityEngine.XR.MagicLeap.MLImageTrackerSettings)">
            <summary>
            Start the image tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.StartAPI">
            <summary>
            Initialize the image tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.CleanupAPI(System.Boolean)">
            <summary>
            Cleanup the image targets first (if it safe) and the cleanup the
            image tracker.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Update(System.Single,System.IntPtr)">
            <summary>
            Handle the update callback.
            Update the tracking results for all the image targets.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.OnApplicationPause(System.Boolean)">
            <summary>
            Handle the application pause callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.AddTarget(System.String,UnityEngine.Texture2D,System.Single,System.Action{UnityEngine.XR.MagicLeap.MLImageTarget,UnityEngine.XR.MagicLeap.MLImageTargetResult},System.Boolean)">
            <summary>
            Adds an image target to the image tracker system.
            </summary>
            <param name="name">The unique name of this target.</param>
            <param name="image">
            Texture2D representing the image target.
            The aspect ration of the target should not be changed. Set the "Non Power of 2" property of Texture2D to none.
            </param>
            <param name="longerDimension">Size of the longer dimension in scene units.</param>
            <param name="callback">The function that will be triggered with target info.</param>
            <param name="isStationary">
            Set this to true if the position of this image target in the physical world is fixed and the local
            geometry is planar.
            </param>
            <returns>MLImageTarget if the target was created and added successfully, null otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.RemoveTarget(System.String)">
            <summary>
            Removes a target whose name matches the passed in name.
            </summary>
            <param name="name">The name of the target to remove.</param>
            <returns>True if the target was found and removed, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.GetCurrentTrackerSettings">
            <summary>
            Get the current MLImageTrackerSettings
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.UpdateTrackerSettings(UnityEngine.XR.MagicLeap.MLImageTrackerSettings)">
            <summary>
            Set MLImageTrackerSettings
            </summary>
            <param name="customSettings">The new MLImageTrackerSettings wanted.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.GetTrackerStatus">
            <summary>
            Get the enabled status of the Image Tracker
            </summary>
            <returns>True if currently enabled, false if disabled.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Enable">
            <summary>
            Enable the Image Tracker
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTracker.Disable">
            <summary>
            Disable the Image Tracker
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputConfiguration">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputConfiguration.#ctor(System.Single,System.Single,System.Boolean)">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.DEFAULT_CFUID_TRACKING_ENABLED">
            <summary>
            The default value for CFUID tracking if not specified.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.DEFAULT_TRIGGER_DOWN_THRESHOLD">
            <summary>
            The default trigger reading threshold for emitting OnTriggerDown.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.DEFAULT_TRIGGER_UP_THRESHOLD">
            <summary>
            The default trigger reading threshold for emitting OnTriggerUp.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputConfiguration.EnableCFUIDTracking">
            <summary>
            Controls if CFUID (Coordinate Frame Unique ID) based tracking should be initialized or not.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputConfiguration.Dof">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputConfiguration.TriggerDownThreshold">
            <summary>
            The trigger reading threshold for emitting OnTriggerUp.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputConfiguration.TriggerUpThreshold">
            <summary>
            The trigger reading threshold for emitting OnTriggerUp.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputConfiguration.op_Explicit(UnityEngine.XR.MagicLeap.MLInputConfiguration)~MagicLeapInternal.InputNativeBindings.MLInputConfiguration">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput">
            <summary>
            Stores the current input information and sends input events.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.#ctor(UnityEngine.XR.MagicLeap.MLInputConfiguration)">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.Hand">
            <summary>
            Standardized enumeration of handedness
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput.Hand.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput.Hand.Right">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureNativeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnControllerButtonNativeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnControllerConnectNativeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInput.OnControllerDisconnectNativeCallback">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._isInEditor">
            <summary>
            Cached value of are we in the Editor for later use on shutdown
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._inputHandle">
            <summary>
            The internal handle attached to this instance of MLInput
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._controllerStateUnmanaged">
            <summary>
            The current input controller state.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._controllers">
            <summary>
            The two controller objects currently being tracked.
            [0] = Left
            [1] = Right
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._triggerPressed">
            <summary>
            The current pressed state of the controller triggers.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._config">
            <summary>
            The input configuration to send to MLInputCreate
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInput._queuedActions">
            <summary />
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureStart">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture begins.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureContinue">
            <summary>
            This callback will be invoked as a detected touchpad gesture continues.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerTouchpadGestureEnd">
            <summary>
            This callback will be invoked whenever a detected touchpad gesture ends.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerButtonDown">
            <summary>
            This callback will be invoked whenever a button press is detected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerButtonUp">
            <summary>
            This callback will be invoked whenever a button release is detected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerConnected">
            <summary>
            This callback will be invoked when a controller is connected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnControllerDisconnected">
            <summary>
            This callback will be invoked when a controller is disconnected.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTriggerDown">
            <summary>
            This callback will be invoked as the trigger passes the TriggerDownThreshold.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLInput.OnTriggerUp">
            <summary>
            This callback will be invoked as the trigger passes the TriggerUpThreshold.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInput.TriggerDownThreshold">
            <summary>
            The threshold used to determine when the trigger has been squeezed enough
            to be considered pressed.  The trigger will remain in the pressed state
            until its reading goes below TriggerUpThreshold. TriggerDownThreshold
            must be larger than TriggerUpThreshold.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInput.TriggerUpThreshold">
            <summary>
            The threshold used to determine when the trigger has been released
            enough to be considered released.  The trigger will remain in the
            released state until its reading goes above TriggerDownThreshold.
            TriggerUpThreshold must be smaller than TriggerDownThreshold.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.QueueCallback(System.Action)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.CreateInstance(UnityEngine.XR.MagicLeap.MLInputConfiguration)">
            <summary>
            static instance of the MLInput class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.Start(UnityEngine.XR.MagicLeap.MLInputConfiguration)">
            <summary>
            Starts the Input API.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetController(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Gets a reference to a Controller object via hand mapping
            </summary>
            <returns> The first MLInputController mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetController(System.Int32)">
            <summary>
            Gets a reference to a Controller object via index
            </summary>
            <returns> MLInputController corresponding to the specified index. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.SetControllerHand(System.Int32,UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific hand
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetControllerIndexFromHand(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Retrieves a controller index mapped to a specific hand
            </summary>
            <returns> Index of controller mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.GetHandFromControllerIndex(System.Int32)">
            <summary>
            Retrieves the hand mapped to the specified controller index
            </summary>
            <returns> Hand corresponding to the specified index. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetController(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Gets a reference to a Controller object via hand mapping
            </summary>
            <returns> The first MLInputController mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetController(System.Int32)">
            <summary>
            Gets a reference to a Controller object via index
            </summary>
            <returns> MLInputController corresponding to the specified index. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalSetControllerHand(System.Int32,UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Maps a controller reference to a specific hand
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetControllerIndexFromHand(UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary>
            Retrieves a controller index mapped to a specific hand
            </summary>
            <returns> Index of the first controller mapped to the specified hand. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.InternalGetHandFromControllerIndex(System.Int32)">
            <summary>
            Retrieves the hand mapped to the specified controller index
            </summary>
            <returns> The hand mapped to the specified controller. </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.StartAPI">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.CreateCFUIDController(UnityEngine.XR.MagicLeap.MLInputConfiguration)">
            <summary>
            Attempts to start the controller in CFUID mode.
            </summary>
            <returns>Returns the handle for the CFUID controller.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.Update(System.Single,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.PollState">
            <summary>
            Poll the controller state, without a valid snapshot.
            Used for initialization.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.PollState(System.IntPtr)">
            <summary>
            Poll the controller state and update the transform.
            </summary>
            <param name="snapshot">The current snapshot for the frame.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.ProcessTriggerReadings">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInput.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up this input tracker and unsubscribes from the MagicLeap device's update loop.
            </summary>
            <param name="isSafeToAccessManagedObjects">Whether it is safe for the cleanup routine to access managed objects.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputController">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.#ctor(System.UInt64,System.UInt64,System.Byte,UnityEngine.XR.MagicLeap.MLInput.Hand)">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Hand">
            <summary>
            The hand this controller is mapped to.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.State">
            <summary>
            The current state of this controller.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Connected">
            <summary>
            Is this controller connected to the device?
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Position">
            <summary>
            Gets the current 3DoF position.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Orientation">
            <summary>
            Gets the current 3DoF orientation.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch1PosAndForce">
            <summary>
            Gets the current touch 1 position (x,y) and force (z). Force is [0-1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch1Active">
            <summary>
            Gets whether touch 1 is active.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch2PosAndForce">
            <summary>
            Gets the current touch 2 position (x,y) and force (z). Force is [0-1].
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Touch2Active">
            <summary>
            Gets whether touch 2 is active.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.TriggerValue">
            <summary>
            Gets current trigger value [0.0-1.0]
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.TouchpadGestureState">
            <summary>
            Current touchpad gesture state
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Type">
            <summary>
            Type of this controller
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Dof">
            <summary>
            Current degrees of freedom mode of the controller
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.CalibrationAccuracy">
            <summary>
            The calibration accuracy levels for controller.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.TouchpadGesture">
            <summary>
            Current touchpad gesture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.Id">
            <summary>
            Controller ID
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.UseCFUIDTransforms">
            <summary>
            Set/Get whether CFUID (Coordinate Frame Unique ID) tracking is being used to get 6DOF transforms on the control. You can toggle this to
            test CFUID (fast but jittery) based tracking vs MLInput (laggy but less jittery) tracking. But that works only if you have enabled it in MLInputConfiguration
            at the time of calling MLInput.Start otherwise this value is ignored.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputController.IsCFUIDTrackingEnabled">
            <summary>
            Returns true if the CFUID tracking is enabled on this controller
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.Update(System.IntPtr)">
            <summary>
            Updates the control state using the MLController API.
            </summary>
            <param name="snapshot">The snapshot used to obtain the control transform.</param>
            <returns>Returns the result from either MLControllerGetState or MLSnapshotGetTransform.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StartFeedbackPatternLED(UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.Single)">
            <summary>
            Start the controller's LED in the specified pattern and set the duration (in seconds)
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StartFeedbackPatternEffectLED(UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.Single)">
            <summary>
            Start the controller's LED performing the specified effect at the specified speed with the specified pattern for the specified duration (in seconds)
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StopFeedbackPatternLED">
            <summary>
            Stop on-going and schedlued LED patterns for the controller
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StartFeedbackPatternVibe(UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity)">
            <summary>
            Vibrate the controller in the specified pattern
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputController.StopFeedbackPatternVibe">
            <summary>
            Stop on-going and schedlued LED vibrations for the controller
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid null internal parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture">
            <summary>
            Class that encasulate touchpad gestures data.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.#ctor">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.#ctor(MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture)">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.PosAndForce">
            <summary>
            Gesture position (x,y) and force (z). Force is [0-1]
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Type">
            <summary>
            Type of gesture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Direction">
            <summary>
            Direction of gesture
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Speed">
            <summary>
            Speed of gesture. Note that this takes on different meanings depending
            on the gesture type being performed. For radial gestures, this will be
            the angular speed around the axis. For pinch gestures, this will be the
            speed at which the distance between fingers is changing.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Distance">
            <summary>
            For radial gestures, this is the absolute value of the angle. For scroll
            and pinch gestures, this is the absolute distance traveled.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.FingerGap">
            <summary>
            Distance between the two fingers performing the gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Radius">
            <summary>
            For radial gestures, this is the radius of the gesture.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Angle">
            <summary>
            Angle from the center of the touchpad to the finger.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGesture.Update(MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture)">
            <summary>
            Update with the specified touchpadGesture.
            </summary>
            <param name="touchpadGesture">Touchpad gesture.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLLightingTracker">
            <summary>
            Provides environment lighting information.
            Capturing images or video will stop the lighting information update.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.#ctor">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.GlobalTemperature">
            <summary>Kelvin color temperature</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.GlobalTemperatureAgeSeconds">
            <summary>
            Time at which global temperature data was captured (represented as elapsed seconds
            since DateTime.MinValue).
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.GlobalTemperatureColor">
            <summary>RGB represenation of the kelvin color temperature.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.AmbientCameraLuminance">
            <summary>Array of each camera's luminance in nits.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.AmbientCameraLuminanceAgeSeconds">
            <summary>
            Time at which ambient camera luminance data was captured (represented as elapsed seconds
            since DateTime.MinValue).
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.AverageLuminance">
            <summary>Average luminace in nits of all sensors.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.RawPixelColorAverage">
            <summary>Accumulated R, G and B values over a 250 ms time period by the Ambient Light Sensor.</summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLLightingTracker.TristimulusValues">
            <summary>The CIE Tri-Stimulus values in Q16 format (scaled 2^16.)</summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CreateInstance">
            <summary>
            Static instance of the MLLightingTracker class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.Start">
            <summary>
            Starts MLLightingTracker.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.StartAPI">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CleanupAPI(System.Boolean)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CalculateGlobalTemperatureColor">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.CalculateGlobalAmbientScalar">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLLightingTracker.Update(System.Single,System.IntPtr)">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceError">
            <summary>
            Contains the error type and error code received from the music service
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceError.ErrorType">
            <summary>The error type</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceError.ErrorCode">
            <summary>
            For ErrorTypes other than ServiceSpecific, the value of ErrorCode
            will match the value of ErrorType.
            When ErrorType is ServiceSpecific, the ErrorCode will be
            specific to the music streaming service
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata">
            <summary>
            Contains the meta data for a track
            </summary>
            \internal
            TODO: Move to bindings file.
            \endinternal</member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.AlbumTitle">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoName">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoUrl">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.AlbumInfoCoverUrl">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.ArtistInfoName">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.ArtistInfoUrl">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.Length">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceMetadata.Position">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicService">
            <summary>
            Manages MusicService.
            </summary>
            \internal
            TODO: Make Singleton
            \endinternal</member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.TrackLength">
            <summary>
            Current Track Length
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.CurrentPosition">
            <summary>
            Current position of playback
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.PlaybackState">
            <summary>
            Current Playback State of the music service
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.RepeatState">
            <summary>
            Current Repeat State of the music service
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMusicService.ShuffleState">
            <summary>
            Current Shuffle State of the music service
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Connect(System.String)">
            <summary>
            Connect to a specified music service provider
            </summary>
            <param name="name">Name of the music service provider</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.AlreadyExists if already connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Disconnect">
            <summary>
            Disconnects from the currently connected music service provider and clean up
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetAuthString(System.String)">
            <summary>
            Sets the authentication string for the MusicService
            </summary>
            <param name="authString">Service provider specific authentication string</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetURL(System.String)">
            <summary>
            Set a single, specific URL to play
            </summary>
            <param name="url">The URL to play</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetPlayList(System.String[])">
            <summary>
            Set an array of URLs to use for the playlist
            </summary>
            <param name="playList">The array of URLs</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.StartPlayback">
            <summary>
            Start playing the current track
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.StopPlayback">
            <summary>
            Stop playing the current track
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.PausePlayback">
            <summary>
            Pause the current track
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.ResumePlayback">
            <summary>
            Resume playback of the current track
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Seek(System.UInt32)">
            <summary>
            Seek to a specified position within the current track
            </summary>
            <param name="position">The position in milliseconds to seek </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Next">
            <summary>
            Advances to the next track in the playlist
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.Previous">
            <summary>
            Moves to the previous track in the playlist
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetShuffle(UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState)">
            <summary>
            Set shuffle on or off
            </summary>
            <param name="mode">The shuffle state to set</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetRepeat(UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState)">
            <summary>
            Set the repeat mode for the music service
            </summary>
            <param name="mode">The repeat mode to set</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.SetVolume(System.Single)">
            <summary>
            Set the volume for the background music
            </summary>
            <param name="volume">Float within the range of 0.0 to 1.0</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if not connected.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetStatus">
            <summary>
            Get the current status of the music service
            </summary>
            <returns>MLMusicServiceStatus enum</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetError">
            <summary>
            Get the error from the music service
            </summary>
            <returns>Error structure with more information about the error</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.GetMetadata">
            <summary>
            Get the meta data for the current track
            </summary>
            <returns>Structure containing the requested metadata </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.RegisterCallbacks(UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks,System.IntPtr@)">
            <summary>
            Set a structure containing the desired callbacks. For unwanted callbacks, null can be
            set. The user must call CleanupCallbacks with the returned IntPtr from this function
            when the callbacks are no longer desired or the application is cleaning up/exiting.
            </summary>
            <param name="callbacks">Structure containing the callback delegate references</param>
            <param name="callbackPtr">IntPtr allocated for these callbacks</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMusicService.CleanupCallbacks(System.IntPtr)">
            <summary>
            Set all callback references to null and cleans up memory allocated to the IntPtr.
            Must be called if RegisterCallbacks is ever used
            </summary>
            <param name="callbackPtr">The IntPtr returned by RegisterCallbacks</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLScreensScreenInfo">
            <summary>
            System screen information.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Position">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Rotation">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensScreenInfo.Dimensions">
            <summary>
            Dimensions of the screens' bounding box.
            x, y and z represent
            width, height and depth respectively.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry">
            <summary>
            Media watch entry for channel application.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.Id">
            <summary>
            Identification number.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.Title">
            <summary>
            Media title.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.Subtitle">
            <summary>
            Media subtitle. Can be left as empty string.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.PlaybackPositionMs">
            <summary>
            Last playback position in milliseconds.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.PlaybackDurationMs">
            <summary>
            Total duration in milliseconds.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.IsValid">
            <summary>
            Entry is valid if:
            * PlaybackPositionMs is smaller or equal to PlaybackDurationMs.
            * Title and Subtitle are not null.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry.ToString">
            <inheritdoc />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLScreens">
            <summary>
            Manages list of Screens media watch history and
            exposes external screen placement.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.DefaultThumbnailWidth">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.DefaultThumbnailHeight">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.DefaultThumbnailIntensityValue">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens.SupportedThumbnailTextureFormats">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens._watchHistory">
            <summary>
            Used to cache entries and avoid native calls if unnecessary.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreens._watchHistoryList">
            <summary>
            Is not kept up to date. Only necessary for getting watch history at
            start.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.CreateInstance">
            <summary>
            static instance of the MLScreens class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Start">
            <summary>
            Initializes the component.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.StartAPI">
            <summary>
            Starts the screens object requests, Must be called to receive screens data from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Update(System.Single,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.CreateThumbnailImage(UnityEngine.Texture2D)">
            Note: this function expects thumbnailImage to be 24-bit</member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Add(UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
            <summary>
            Adds new media watch entry to history with default thumbnail.
            </summary>
            <param name="entry">
            Entry to add. Id is ignored and gets overwritten if operation is successful.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Add(UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry@,UnityEngine.Texture2D)">
            <summary>
            Adds new media watch entry to history.
            </summary>
            <param name="entry">
            Entry to add. Id is ignored and gets overwritten if operation is successful.
            </param>
            <param name="thumbnailImage">
            Thumbnail image for entry. Format needs to be TextureFormat.RGB24.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Remove(System.Int64)">
            <summary>
            Removes entry from media watch history.
            </summary>
            <param name="entryId">Id of existing media watch entry.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Update(UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
            <summary>
            Updates media watch entry with default thumbnail.
            </summary>
            <param name="entry">Id of existing media watch entry.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.Update(UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry,UnityEngine.Texture2D)">
            <summary>
            Updates media watch entry.
            </summary>
            <param name="entry">Id of existing media watch entry.</param>
            <param name="thumbnailImage">
            Thumbnail image for entry. Format needs to be TextureFormat.RGB24.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetEntry(System.Int64,UnityEngine.XR.MagicLeap.MLScreensWatchHistoryEntry@)">
            <summary>
            Gets entry from media watch history.
            </summary>
            <param name="id">Id of existing media watch entry.</param>
            <param name="entry">Output entry if successful, unmodified otherwise.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetAllEntries">
            <summary>
            Gets all media watch history entries.
            </summary>
            <returns />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.ClearAllEntries">
            <summary>
            Clears all media watch history for this app.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetScreensInfo(System.Collections.Generic.List{UnityEngine.XR.MagicLeap.MLScreensScreenInfo}@)">
            <summary>
            Gets information for all system saved screens.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetThumbnail(System.Int64,UnityEngine.Texture2D@)">
            <summary>
            Gets previously saved thumbnail for history entry.
            Avoid using this function, and maintain thumbnails
            through app persistent memory instead.
            </summary>
            <param name="entryId" />
            <param name="imageThumbnail" />
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLScreensResult.ServiceNotAvailable if failed due to the unavailability of the screens service.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLScreens.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLSecureStorage">
            <summary>
            User interface to ML's secure storage API.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.StoreData(System.String,System.Byte[])">
            <summary>
            Stores the specified data under the specified key. An existing key would be overwritten.
            </summary>
            <param name="dataKey">The key string associated with the data.</param>
            <param name="data">The data byte array to store.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLSecureStorageResult.IOFailure if failed due to an I/O failure.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.StoreData``1(System.String,``0)">
            <summary>
            Generic store function for all value types.
            Using BinaryFormatter.Serialize() to serialize data to bytes.
            </summary>
            <param name="dataKey">The key string associated with the data.</param>
            <param name="value">The generic type value to store.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLSecureStorageResult.IOFailure if failed due to an I/O failure.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.GetData(System.String,System.Byte[]@)">
            <summary>
            Retrieves the data associated with the specified key.
            </summary>
            <param name="dataKey">The key string to look for.</param>
            <param name="data">A valid array of bytes to store retrieved data.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLSecureStorageResult.IOFailure if failed due to an I/O failure.
            MLResult.Code will be MLSecureStorageResult.BlobNotFound if the dataKey was not found.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.GetData``1(System.String,``0@)">
            <summary>
            Generic get function for all value types.
            Using BinaryFormatter.Deserialize() to deserialize bytes to specified value type.
            </summary>
            <param name="dataKey">The key string to look for.</param>
            <param name="value">A generic type value to store retrieved data.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLSecureStorageResult.IOFailure if failed due to an I/O failure.
            MLResult.Code will be MLSecureStorageResult.BlobNotFound if the dataKey was not found.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.DeleteData(System.String)">
            <summary>
            Deletes the item associated with the specified key.
            </summary>
            <param name="dataKey">The key string of the item to delete.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLSecureStorageResult.IOFailure if failed due to an I/O failure.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.CheckKey(System.String)">
            <summary>
            Utility function that searches for unicode characters in a string.
            </summary>
            <param name="dataKey">String to test.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.SerializeData(System.Object)">
            <summary>
            Method to serialize arbitrary objects into a byte array.
            </summary>
            <param name="obj">Base System.Object of data to serialize.</param>
            <returns>byte array of serialized data.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSecureStorage.DeserializeData(System.Byte[])">
            <summary>
            Method to deserialize arbitrary objects from a byte array.
            </summary>
            <param name="data">byte array of serialized data.</param>
            <returns>Base System.Object of deserialized data.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent">
            <summary>
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials">
            <summary>
            The credentials that can be used to for a user to access a particular service (Audience).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.accessKeyId">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.secretKey">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentCredentials.sessionToken">
            <summary>
            Null terminated string allocated and released by the library.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens">
            <summary>
            MLTokenAgentTokens contains tokens that are used to read and modify the user profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens.idToken">
            <summary>
            The idToken contains information from the user profile.
            It is a null terminated string that is allocated and released by the library.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentTokens.accessToken">
            <summary>
            The accessToken is the token that can be used to modify attributes of the user profile.
            It is a null terminated string that is allocated and released by the library.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials">
            <summary>
            Internal raw representation of C API's MLTokenAgentClientCredentials.
            MLTokenAgentClientCredentials represents the credentials and tokens of the User-Audience pair
            that is associated with the calling service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials.credentials">
            <summary>
            The credentials that can be used to access a particular service (Audience).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.InternalMLTokenAgentClientCredentials.tokens">
            <summary>
            The tokens that can be used to manage the user profile for a particular Audience.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials">
            <summary>
            Public represenation of MLTokenAgentClientCredentials.
            MLTokenAgentClientCredentials represents the credentials and tokens of the User-Audience pair
            that is associated with the calling service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials._clientCredentialsPtr">
            <summary>
            Internal pointer used to associate the the managed version of this structure
            with the unmanaged pointer that is used by the TokenAgent API to communicate with us.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials._clientCredentials">
            <summary>
            Internal convenience structure which represents the marshaled unmanaged structure
            to communicate with the TokenAgent API.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.Valid">
            <summary>
            Public property to check if internal pointer and hence this ClientCredentials is valid.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.credentials">
            <summary>
            Forward credentials data to/from internal struture.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials.tokens">
            <summary>
            Forward token data to/from internal struture.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetClientCredentials(UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
            <summary>
            GetClientCredentials is a blocking function that accesses the cloud and
            returns a MLTokenAgentClientCredentials structure containing the users credentials and
            tokens for a particular service (Audience).
            The library deduces the Audience being requested from the name of the calling service.
            </summary>
            <param name="outCredentials">
            MLTokenAgentClientCredentials output reference to a structure which was created
            with all its fields by the library. It must only be released using
            ReleaseClientCredentials.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be an MLTokenAgentResult if a token specific failure occurred during the operation.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetClientCredentialsAsync(System.IntPtr@)">
            <summary>
            GetClientCredentialsAsync invokes the GetClientCredentials
            function asynchronously (in a different thread).
            </summary>
            <param name="outFuture">
            A pointer to an MLInvokeFuture pointer which provides the means to poll for completion and
            to retrieve the credentials returned by MLTokenAgentGetClientCredentials.
            This pointer will be freed by the library before returning from the first (and last)
            call to MLTokenAgentGetClientCredentialsWait, after the asynchronous call completed, that is
            after MLTokenAgentGetClientCredentialsWait returns any value that is not MLResult.Pending.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be an MLTokenAgentResult if a token specific failure occurred during the operation.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetClientCredentialsWait(UnityEngine.XR.MagicLeap.MLInvokeFuture,System.UInt32,UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
            <summary>
            Having made a call to MLTokenAgentGetClientCredentialsAsync, the user can call
            MLTokenAgentGetClientCredentialsWait to detect whether the asynchronous call completed and if
            so, to retrieve the credentials in outCredentials. The call to MLTokenAgentGetClientCredentialsWait
            blocks until either msecTimeout msec elapses or the asynchronous function completes.
            </summary>
            <param name="future">
            MLInvokeFuture returned by the GetClientCredentialsAsync function
            </param>
            <param name="msecTimeout">
            The timeout in milliseconds.
            </param>
            <param name="outCredentials">
            Output reference where the credentials structure created
            by the library will be copied, if the asynchronous call completed.
            The location pointed to by out_credentials was set to the address of the
            MLTokenAgentClientCredentials structure allocated by the library.
            The returned credentils must be released when no longer needed by calling
            MLTokenAgentReleaseClientCredentials
            If any other value is returned, the location pointed to by outCredentials is set to
            0 (null).
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if the operation completed successfully before the timeout elapsed.
            MLResult.Code will be MLResultCode.Pending if the timeout elapsed before the operation completed.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLResultCode.AllocFailed if failed to allocate memory.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be an MLTokenAgentResult if a token specific failure occurred during the operation.
            </returns>
            <remarks>
            Note:
            1. To poll without blocking use msecTimeout = 0
            2. After the function returns true, future is freed by the library and must not be used again in
            	a call to MLTokenAgentGetClientCredentialsWait.
            </remarks>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.ReleaseClientCredentials(UnityEngine.XR.MagicLeap.MLTokenAgent.MLTokenAgentClientCredentials@)">
            <summary>
            ReleaseClientCredentials releases all resources associated with the
            MLTokenAgentClientCredentials stucture that was returned by the library.
            </summary>
            <param name="credentials">
            MLTokenAgentClientCredentials reference to a strcuture received using one of:
            GetClientCredentials or GetClientCredentialsWait.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if the operation completed successfully before the timeout elapsed.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLTokenAgent.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags">
            <summary>
            Enumeration of plane types
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Vertical">
            <summary>
            Include planes whose normal is perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Horizontal">
            <summary>
            Include planes whose normal is parallel to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Arbitrary">
            <summary>
            Include planes with arbitrary normals that are not parallel or perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.AllOrientations">
            <summary>
            Include planes of all possible orientations.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.OrientToGravity">
            <summary>
            For non-horizontal planes, setting this flag will result in
            the plane rectangle being forced to perpendicular to gravity.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.Inner">
            <summary>
            If this flag is set, inner planes will be returned; if it is not set,
            outer planes will be returned.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.IgnoreHoles">
            <summary>
            Instructs the plane system to ignore holes in planar surfaces.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticCeiling">
            <summary>
            Include planes semantically tagged as ceiling.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticFloor">
            <summary>
            Include planes semantically tagged as floor.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticWall">
            <summary>
            Include planes semantically tagged as wall.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryFlags.SemanticAll">
            <summary>
            Include all planes that are semantically tagged.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams">
            <summary>
            Plane Startup Configuration Parameters. Pass these to the Start function
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.Flags">
            <summary>
            The flags to apply to this query.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsCenter">
            <summary>
            The center of the bounding box which defines where planes extraction should occur.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsRotation">
            <summary>
            The rotation of the bounding box where planes extraction will occur.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.BoundsExtents">
            <summary>
            The size of the bounding box where planes extraction will occur.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.MaxResults">
            <summary>
            The maximum number of results that should be returned.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.MinHoleLength">
            <summary>
            If MLPlanesQueryFlags.IgnoreHoles is not set, holes with a perimeter
            (in meters) smaller than this value will be ignored, and can be part of
            the plane. This value cannot be lower than 0 (lower values will be
            capped to this minimum).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams.MinPlaneArea">
            <summary>
            The minimum area (in squared meters) of planes to be returned. This value
            cannot be lower than 0.04 (lower values will be capped to this minimum).
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlane">
            <summary>
            A quad surface.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Center">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Rotation">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Width">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Height">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Flags">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlane.Id">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldPlanes">
            <summary>
            Creates planes requests and delegates their result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Callback">
            <summary>
            Query result callback.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.MaxResults">
            <summary>
            The max results.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.PlanesResultsUnmanaged">
            <summary>
            The planes results unmanaged.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Planes">
            <summary>
            The planes.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Finalize">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Query.Dispose">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldPlanes.DefaultQueryFlags">
            <summary>
            The default query flags.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.CreateInstance">
            <summary>
            static instance of the MLWorldPlanes class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Start">
            <summary>
            Starts the Planes API.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.StartAPI">
            <summary>
            Starts the plane object requests, Must be called to start receiving plane results from
            the underlying system.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.Update(System.Single,System.IntPtr)">
            <summary>
            Polls for the result of pending planes requests.
            </summary>
            <param name="timeElapsed">Time elapsed since last frame's update.</param>
            <param name="perceptionSnapshot">Native pointer to this frame's perception snapshot.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.ProcessPendingQueries">
            <summary>
            Process pending requests and call the callback specified in the startup config.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.GetQueryResultForHandle(System.UInt64,UnityEngine.XR.MagicLeap.MLWorldPlanes.Query)">
            <summary>
            Execute query.
            </summary>
            <param name="handle">ML internal handle for the pending query.</param>
            <param name="query">Query class for the pending query.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.ExtractPlanesFromQueryResults(UnityEngine.XR.MagicLeap.MLWorldPlanes.Query,System.UInt32)">
            <summary>
            Extract unmanaged plane data and convert to managed plane data.
            </summary>
            <param name="query">Query class for the pending query.</param>
            <param name="numResults">Number of plane results returned.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.ProcessCompletedQueries">
            <summary>
            Go through all completed queries and publish their results also clean them up.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.GetPlanes(UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLWorldPlane[]})">
            <summary>
            Request real world quad surfaces.
            Callback will never be called while request is still pending.
            </summary>
            <param name="queryParams">Plane query options.</param>
            <param name="callback">
            Callback used to report query results.
            Callback MLResult code will never be MLResultCode.Pending.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.GetPlanesInternal(UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLWorldPlane[]})">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldPlanes.BeginPlaneQuery(UnityEngine.XR.MagicLeap.MLWorldPlanesQueryParams,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLWorldPlane[]})">
            <summary>
            Begin querying for planes.
            </summary>
            <param name="queryParams">Plane query options.</param>
            <param name="callback">Callback used to report query results.</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays">
            <summary>
            Sends requests to create Rays intersecitng world geometry and returns results through callbacks.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState">
            <summary>
            Enumeration of raycast result states.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.RequestFailed">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.NoCollision">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.HitUnobserved">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.MLWorldRaycastResultState.HitObserved">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams">
            <summary>
            Parameters for a raycast request.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Position">
            <summary>
            Where the ray is cast from.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Direction">
            <summary>
            Direction of the ray to fire.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.UpVector">
            <summary>
            Up vector of the ray to fire.  Use (0, 0, 0) to use the up vector of the rig frame.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Width">
            <summary>
            The number of horizontal rays. For single point raycast, set this to 1.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.Height">
            <summary>
            The number of vertical rays. For single point raycast, set this to 1.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.HorizontalFovDegrees">
            <summary>
            The horizontal field of view, in degrees.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams.CollideWithUnobserved">
            <summary>
            If true, a ray will terminate when encountering an unobserved area and return
            a surface or the ray will continue until it ends or hits a observed surface.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback">
            <summary>
            Delegate used to convey the result of a raycast.
            </summary>
            <param name="state">The state of the raycast result.</param>
            <param name="hitpoint">Where in the world the collision happened.</param>
            <param name="normal">Normal to the surface where the ray collided.</param>
            <param name="confidence">The confidence of the ray cast result. Confidence is a non-negative value from 0 to 1 where closer to 1 indicates a higher quality.</param>
            \internal
            CAPI has custom result MLWorldRaycastResultState, thus we expose it instead of MLResult.
            \endinternal</member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.CreateInstance">
            <summary>
            static instance of the MLWorldRays class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.Start">
            <summary>
            Starts the World Rays API.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.StartAPI">
            <summary>
            Starts the plane object requests, Must be called to start receiving plane results from
            the underlying system
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.EnableRayCast(System.Boolean)">
            <summary>
            Enable/disable ray cast
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up memory plus disables raycast feature
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.DestroyNativeTracker">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.Clear">
            <summary>
            Clear pending request queue, free up memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.Update(System.Single,System.IntPtr)">
            <summary>
            Polls for the result of pending raycast requests.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.PublishResults">
            <summary>
            Publish results to every pending callback
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.GetWorldRays(UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary>
            Requests a raycast with the given query parameters.
            </summary>
            <param name="query">Query parameters describing ray being cast.</param>
            <param name="callback">Delegate which will be called when the result of the raycast is ready.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to internal invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.GetWorldRaysInternal(UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLWorldRays.RequestRays(UnityEngine.XR.MagicLeap.MLWorldRays.QueryParams,UnityEngine.XR.MagicLeap.MLWorldRays.ResultCallback)">
            <summary>
            Request world rays
            </summary>
            <param name="query">Query parameters describing ray being cast.</param>
            <param name="callback">Delegate which will be called when the result of the raycast is ready.</param>
        </member>
        <member name="T:IMediaPlayer">
            <summary>
            Interface for target classes used by MLMediaPlayer
            Each function must be implemented by the child player type
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMediaPlayer">
            <summary>
            Media player script that allows playback of a streaming video (either from file or web URL)
            This script will update the main texture parameter of the Renderer attached as a sibling
            with the video frame from playback. Audio is also handled through this class and will
            playback audio from the file.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.VideoSource">
            <summary>
            The Media Player's source video URL. This can be a local streaming asset or web content
            After changing the Video Source, you must call PrepareVideo() before calling Play()
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.LicenseServer">
            <summary>
            The Media Player's license server URL. If left blank, will attempt to use default
            server returned by the DRM library.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnPlay">
            <summary>
            Callback that is fired when the Media Player begins playback
            Provides the length/duration of the video being played, in milliseconds
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnPause">
            <summary>
            Callback that is fired when the Media Player pauses playback
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnStop">
            <summary>
            Callback that is fired when the Media Player stops playback
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnSeekStarted">
            <summary>
            When beginning a seek, notifies with the target position in the media as a percentage.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnSeekCompleted">
            <summary>
            When a seek completes, notifies with the current position in the media as a percentage.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnEnded">
            <summary>
            Callback that notifies when the video has eached the end of the stream.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnBufferingUpdate">
            <summary>
            When a video is buffering, notifies the percentage of completeness of the buffering
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnFrameSizeSetup">
            <summary>
            On starting, notifies the current aspect ratio of the video file
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnVideoPrepared">
            <summary>
            Notifies when a video has been prepared and is ready to begin playback
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnError">
            <summary>
            Invoked when media player encounters an error. First parameter is the type of error as MLMediaPlayerError
            second parameter is extra information about the error as MLMediaError
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnInfo">
            <summary>
            Invoked when media player has informational events available
            First parameter is the type of information event as MLMediaPlayerInfo
            Second parameter is any extra info the informational event may define
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.MediaPlayerID">
            <summary>
            A unique identifier for this specific MLMediaPlayer object
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.IsLooping">
            <summary>
            Sets or gets if the video is looping.
            Setting may only be done after PrepareVideo().
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.IsPlaying">
            <summary>
            If the video is currently playing
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLMediaPlayer.AnimationPosition">
            <summary>
            The current percentage position through the video, useful for a UI to update a timeline
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.PrepareVideo">
            <summary>
            After setting VideoSource, prepare the video and start playback
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to an internal error prevented MediaPlayer from starting.
            MLResult.Code will be MLMediaGenericResult.NoInit if failed due to media player not properly initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if failed due to calling from the wrong state.
            MLResult.Code will be MLResultCode.PrivilegeDenied if attempting to access web content without appropriate network privileges
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.Seek(System.Int32)">
            <summary>
            Seek to a relative time in milliseconds
            </summary>
            <param name="timeMS">The time increment to jump to</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.Seek(System.Single)">
            <summary>
            Seek to a specified percentage through the video
            </summary>
            <param name="percent">Percent time to seek to [0.0 -&gt; 1.0]</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.SetVolume(System.Single)">
            <summary>
            Set the volume
            </summary>
            <param name="volume">Volume in range [0.0 -&gt; 1.0]</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.GetElapsedTimeMs">
            <summary>
            Get the elapsed time in milliseconds
            </summary>
            <returns>Integer of milliseconds passed.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.GetDurationMs">
            <summary>
            Get the duration of the video in milliseconds
            </summary>
            <returns>Integer of milliseconds total duration</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.Play">
            <summary>
            Play the video
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if failed due to media player not properly initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if failed due to calling from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.Pause">
            <summary>
            Pause the video
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if failed due to media player not properly initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if failed due to calling from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.Stop">
            <summary>
            Stop the video and return to beginning.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if failed due to media player not properly initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if failed due to calling from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnDestroy">
            <summary>
            Clean up on application shutdown
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayer.OnApplicationPause(System.Boolean)">
            <summary>
            Pause the media player when the app loses focus
            </summary>
            <param name="isPaused">True when leaving the app, False when re-entering</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.Initialize(System.Int32,System.Action{System.Object},System.Func{System.Object,UnityEngine.XR.MagicLeap.MLResult},System.Action{System.Object,System.Object},System.Action{System.Object,System.Object,System.Object},System.Action{System.Object,System.Object,System.Object},System.Action{System.Object})">
            <summary>
            Initialize the Media Player for the Editor
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <param name="videoEndedCallback">Callback when video ends</param>
            <param name="startPreparedCallback">Callback when video is prepared</param>
            <param name="updateBufferingUICallback">Callback when video buffering is updated</param>
            <param name="onErrorCallback">Callback when an error occurs</param>
            <param name="onInfoCallback">Callback when an info event occurs</param>
            <param name="onSeekCompleted">Callback when a seek completes</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.CreateStreamingMediaPlayer(UnityEngine.GameObject,System.String,System.Int32)">
            <summary>
            Creates the streaming media player
            </summary>
            <param name="mediaPlayerGO">The media player game object</param>
            <param name="source">URL of the media</param>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            MLResult.Code will be MLResultCode.PrivilegeDenied if attempting to access web content without appropriate network privileges
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.Play(System.Int32)">
            <summary>
            Plays the video
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if method was called from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.PauseVideo(System.Int32)">
            <summary>
            Pauses the video
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if method was called from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.Seek(System.Int32,System.Int32)">
            <summary>
            Seeks the specified time in the video
            </summary>
            <param name="positionMilliseconds">Absolute time to seek to</param>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if method was called from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.SetVolume(System.Single,System.Int32)">
            <summary>
            Sets the volume of the video
            </summary>
            <param name="vol">Volume</param>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.Stop(System.Int32)">
            <summary>
            Stops the video in the editor
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if method was called from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.Resume(System.Int32)">
            <summary>
            Resumes the video
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            MLResult.Code will be MLMediaGenericResult.InvalidOperation if method was called from the wrong state.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.SetLooping(System.Boolean,System.Int32)">
            <summary>
            Sets the loop flag for the video
            </summary>
            <param name="loop">Flag to loop</param>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.Cleanup(System.Int32)">
            <summary>
            Cleans up the video
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to internal error.
            MLResult.Code will be MLMediaGenericResult.NoInit if media player was not properly built or initialized.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.GetDurationMilliseconds(System.Int32)">
            <summary>
            Gets the duration of the video in milliseconds
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>Duration of the video, -1 on failure</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.GetPositionMilliseconds(System.Int32)">
            <summary>
            Gets the current position of the video in milliseconds
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>Position of the playback of the video, -1 on failure</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.GetWidth(System.Int32)">
            <summary>
            Get the width of the video in pixels
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>The width of the video, -1 on failure</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.GetHeight(System.Int32)">
            <summary>
            Get the height of the video in pixels
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>The height of the video, -1 on failure</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerLumin.SetLicenseServer(System.String)">
            <summary>
            Sets the license server for DRM videos
            </summary>
            <param name="licenseServer">URL of the License Server</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.Initialize(System.Int32,System.Action{System.Object},System.Func{System.Object,UnityEngine.XR.MagicLeap.MLResult},System.Action{System.Object})">
            <summary>
            Initialize the Media Player for the Editor
            </summary>
            <param name="mediaPlayerID">ID of the media player</param>
            <param name="startPreparedCallback">Callback when media player is created</param>
            <param name="videoEndedCallback">Callback when video ends</param>
            <param name="seekCompletedCallback">Callback when a seek completes</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.CreateStreamingMediaPlayer(UnityEngine.GameObject,System.String,System.Int32)">
            <summary>
            Creates the streaming media player for the editor
            </summary>
            <param name="mediaPlayerGO">The media player game object</param>
            <param name="source">URL of the media</param>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>
            MLResult.Code will be MLResult.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.CreateTexture(UnityEngine.Renderer,System.Int32)">
            <summary>
            Creates the texture on the renderer to play the video on
            </summary>
            <param name="renderer">Renderer of the object to play on</param>
            <param name="mediaPlayerID">ID of the media player</param>
            <returns>True on success, false otherwise</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.Play(System.Int32)">
            <summary>
            Plays the video in the editor
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.PauseVideo(System.Int32)">
            <summary>
            Pauses the video in the editor
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.Seek(System.Int32,System.Int32)">
            <summary>
            Seeks the specified time in the video in the editor
            </summary>
            <param name="positionMilliseconds">Absolute time to seek to</param>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.SetVolume(System.Single,System.Int32)">
            <summary>
            Sets the volume of the video in the editor
            </summary>
            <param name="vol">Volume</param>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.Stop(System.Int32)">
            <summary>
            Stops the video in the editor
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.Resume(System.Int32)">
            <summary>
            Resumes the video in the editor
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.SetLooping(System.Boolean,System.Int32)">
            <summary>
            Sets the loop flag for the video in the editor
            </summary>
            <param name="loop">Flag to loop</param>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.Cleanup(System.Int32)">
            <summary>
            Cleans up the video in the editor
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.GetDurationMilliseconds(System.Int32)">
            <summary>
            Gets the duration of the video in milliseconds
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>Duration of the video</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.GetPositionMilliseconds(System.Int32)">
            <summary>
            Gets the current position of the video in milliseconds
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>Position of the playback of the video</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.GetWidth(System.Int32)">
            <summary>
            Get the width of the video in pixels
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>The width of the video</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.GetHeight(System.Int32)">
            <summary>
            Get the height of the video in pixels
            </summary>
            <param name="mediaPlayerID">(unused) ID of the media player</param>
            <returns>The height of the video</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLMediaPlayerEditor.SetLicenseServer(System.String)">
            <summary>
            Sets the license server for DRM videos (should not be called)
            </summary>
            <param name="licenseServer">(unused) URL of the License Server</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPersistentStore">
            <summary>
            MLPersistentStore implementation.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.CreateInstance">
            <summary>
            static instance of the MLPersistentStore class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Start">
            <summary>
            Starts the MLPersistentStore.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.StartAPI">
            <summary>
            Loads bindings from the persistent file storage
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.LoadBindings">
            <summary>
            Loads the store bindings between virtual object and the PCFs
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.CacheData(UnityEngine.XR.MagicLeap.MLContentBindings)">
            <summary>
            stores the bindings in a look up dictionary
            </summary>
            <param name="data">Data.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Contains(System.String)">
            <summary>
            Checks if the specified virtual object exists in the store
            </summary>
            <returns>True if store contains the virtual object.</returns>
            <param name="virtualObjId">Virtual object identifier.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.ContainsInternal(System.String)">
            <summary>
            Checks if the specified virtual object exists in the store
            </summary>
            <returns>
                <c>true</c>, if internal was contained, <c>false</c> otherwise.</returns>
            <param name="virtualObjId">Virtual object identifier.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Load(System.String,UnityEngine.XR.MagicLeap.MLContentBinding@)">
            <summary>
            Load the Content binding for the specified virtualObjId
            </summary>
            <param name="virtualObjId">Virtual object identifier.</param>
            <param name="binding">Binding.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.CleanupAPI(System.Boolean)">
            <summary>
            Cleanups the API.
            </summary>
            <param name="isSafeToAccessManagedObjects">If set to <c>true</c> is safe to access managed objects.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Update(System.Single,System.IntPtr)">
            <summary>
            Update with specified timeDelta and perceptionSnapshot.
            </summary>
            <param name="timeDelta">Time delta.</param>
            <param name="perceptionSnapshot">Perception snapshot.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.Save(UnityEngine.XR.MagicLeap.MLContentBinding)">
            <summary>
            Save the specified binding. Note : currently this function saves to the file system
            everytime you call it, so it can be slow.
            </summary>
            <param name="binding">Binding.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.InternalSave(UnityEngine.XR.MagicLeap.MLContentBinding)">
            <summary>
            Saves the binding. The binding is checked for validity and also
            </summary>
            <param name="binding">Binding.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.DeleteBinding(UnityEngine.XR.MagicLeap.MLContentBinding)">
            <summary>
            Deletes the binding if it exists. otherwise it's a no op.
            </summary>
            <param name="binding">Binding.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentStore.DeleteAll">
            <summary>
            Deletes all bindings in the store.. Call save after this
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBindingType">
            <summary>
            Content Binding type.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindingType.PCF">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindingType.FoundObjects">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBinding">
            <summary>
            MLContentBinding class represents the binding between the virtual object/user content
            and the Persistent coordinate frame (PCF). It stores the offset of the content with respect to
            the PCF and restores it from the persistent store (MLPersistentStore).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.ObjectId">
            <summary>
            Virtual object identifier.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.PCF">
            <summary>
            PCF that the virtual object is bound to
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.BindingType">
            <summary>
            Binding representing the connection between PCF and ObjectId.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.Offset">
            <summary>
            The offset of the virtual object to the PCF.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBinding.OrientationOffset">
            <summary>
            The orientation offset from PCF.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContentBinding.GameObject">
            <summary>
            Gets or sets the game object. GameObject represents the virtual
            content.
            </summary>
            <value>The game object.</value>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLContentBinding.IsValid">
            <summary>
            Gets a value indicating whether this <see cref="T:UnityEngine.XR.MagicLeap.MLContentBinding" /> is valid.
            </summary>
            <value>
                <c>true</c> if is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinding.Update">
            <summary>
            Updates the binding information based on the PCF and GameObject locations.
            It will child the game object under the game object representing the PCF.
            It checks if the PCF is a good state before carrying out this operation
            </summary>
            <returns>
            MLResult.code will be MLResult.Ok when operation is successful
            MLResult.code will be MLResult.InvalidParam when GameObject is not set or PCF is not set or CurrentResult value in MLPCF is not Ok
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinding.Restore(System.Action{UnityEngine.XR.MagicLeap.MLContentBinding,UnityEngine.XR.MagicLeap.MLResult})">
            <summary>
            Restores the binding between the PCF and the virtual object and returns the result
            through the callback. Restoration includes childing the virtual object under PCF game object.
            and restoring the old local offsets (rotation and position).
            <param name="callback"> Callback to be called when the restore finishes. </param></summary>
            <returns>
            MLResult.code will be MLResult.Ok when operation is successful
            MLResult.code will be MLResult.InvalidParam when GameObject is not set or PCF is not set or CurrentResult value in MLPCF is not Ok
            MLResult.code will be MLResult.UnspecifiedFailure when MLPersistentCoordinateFrames is not started
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBindings">
            <summary>
            Storage entry
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindings.Version">
            <summary>
            The version.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLContentBindings.Bindings">
            <summary>
            The bindings.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLContentBinder">
            <summary>
            MLContentBinder class. Helper class for creating bindings and restoring them
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinder.BindToPCF(System.String,UnityEngine.GameObject,UnityEngine.XR.MagicLeap.MLPCF)">
            <summary>
            Creates a binding between the virtual object and the specified PCF.
            </summary>
            <param name="virtualObjId">Virtual object identifier.</param>
            <param name="go">GameObject representing the virtual object. (Note: This is not serialized)</param>
            <param name="pcf">PCF to bind to</param>
            <returns>
            MLContentBinding object with mapping between virtual object and PCF. Please note that
            just calling this function is not enough to persist the binding. Call MLPersistentStore.Save to persist this mapping.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLContentBinder.Restore(UnityEngine.XR.MagicLeap.MLContentBinding,System.Action{UnityEngine.XR.MagicLeap.MLContentBinding,UnityEngine.XR.MagicLeap.MLResult})">
            <summary>
            Restore the specified binding and call the callback when the restore is complete
            </summary>
            <param name="binding">Binding.</param>
            <param name="callback">callback.</param>
            <returns>
            MLResult.code will be MLResult.Ok when operation is successful
            MLResult.code will be MLResult.InvalidParam when callback is null
            MLResult.code will be MLResult.UnspecifiedFailure when MLPersistentCoordinateFrames is not started
            </returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.IMLPersistentStorage`1">
            <summary>
            Persistent Storage interface.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1">
            <summary>
            File storage implementation.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Finalize">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Load(System.String)">
            <summary>
            Loads the persistent data from the given file.
            </summary>
            <param name="fileName">Name of the file to load.</param>
            <returns>MLContentBindings from file contents if found, null if not found.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.LoadAsync(System.String,System.Action{System.Boolean,`0})">
            <summary>
            Currently not implemented.
            </summary>
            <param name="fileName">File name.</param>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Save(System.String,`0)">
            <summary>
            Saves the persistent data to the given file name.
            </summary>
            <param name="fileName">Name of the file to save to.</param>
            <param name="data">Data to save.</param>
            <returns>True if the file exists, false if not found after writing.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.SaveAsync(System.String,`0,System.Action{System.Boolean})">
            <summary>
            Currently not implemented.
            </summary>
            <param name="fileName">File name.</param>
            <param name="data">Data.</param>
            <param name="callback">Callback.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentFileStorage`1.Dispose">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPCF">
            <summary>
            MLPCF class is an abstraction for representing a
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPCF.CFUID">
            <summary>
            The cfuid.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPCF.PositionInRUB">
            <summary>
            The position of the PCF, note it's in the Right, Up and Back Coordinate system.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPCF.OrientationInRUB">
            <summary>
            The orientation in Right Up and Back coordinate system.
            This is the coordinate system in which the native layer reports the
            transforms.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLPCF.OnCreate">
            <summary>
            OnCreated event gets fired when a new PCF gets created. The parameter is the
            the instance of the MLPCF that got created.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLPCF.OnUpdate">
            <summary>
            OnUpdate event gets fired when the position, orientation of the PCF changes.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.GameObj">
            <summary>
            GameObject representing the PCF
            </summary>
            <value>The game object.</value>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLPCF.CurrentResult">
            <summary>
            Gets or sets the current result.
            </summary>
            <value>The current result.</value>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPCF.ToString">
            <summary>
            Returns the string representation of the pcf. Use it only for debugging.
            </summary>
            <returns>Returns the string representation of the pcf.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames">
            <summary>
            MLPersistentCoordinateFrames class contains the API to interface with the
            Persistent Coordinate Frame CAPI.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.Start">
            <summary>
            Starts the PersistentCoordinateFrame API.
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            MLResult.Code will be MLPassableWorldResult.LowMapQuality if map quality is too low for content persistence. Continue building the map.
            MLResult.Code will be MLPassableWorldResult.UnableToLocalize if currently unable to localize into any map. Continue building the map.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.StartAPI">
            <summary>
            Starts the API.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.Update(System.Single,System.IntPtr)">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.FindClosestPCF(UnityEngine.Vector3,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLPCF})">
            <summary>
            Retireve closest known PCF to the given position.
            </summary>
            <param name="position">The position of the object we want to anchor</param>
            <param name="callback">The method called when the closest PCF is found</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            MLResult.Code will be MLPassableWorldResult.LowMapQuality if map quality is too low for content persistence. Continue building the map.
            MLResult.Code will be MLPassableWorldResult.UnableToLocalize if currently unable to localize into any map. Continue building the map.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.GetPCFPosition(UnityEngine.XR.MagicLeap.MLPCF,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLPCF})">
            <summary>
            Gets the PCF position from the transform.
            </summary>
            <param name="pcf">Pcf. Should be valid. </param>
            <param name="callback">Callback. Called with the result when the return value of the function is MLResult.IsOk</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.InvalidParam if failed due to an invalid input parameter.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            MLResult.Code will be MLSnapshotResult.PoseNotFound if Coordinate Frame is valid, but not found in the current pose snapshot.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.GetAllPCFs(System.Collections.Generic.List{UnityEngine.XR.MagicLeap.MLPCF}@,System.Int32)">
            <summary>
            Gets all PCF.
            </summary>
            <param name="pcfList">Pcf list.</param>
            <param name="maxResults">Max results.</param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if successful.
            MLResult.Code will be MLResultCode.PrivilegeDenied if necessary privilege is missing.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if failed due to other internal error.
            MLResult.Code will be MLPassableWorldResult.LowMapQuality if map quality is too low for content persistence. Continue building the map.
            MLResult.Code will be MLPassableWorldResult.UnableToLocalize if currently unable to localize into any map. Continue building the map.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPersistentCoordinateFrames.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior">
            <summary>
            MLImageTrackerBehavior encapsulates the functionality to track images
            Avoid making references to this behavior from OnApplicationPause
            since the underlying system will likely be disabled.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.Image">
            <summary>
            Image that needs to be tracked.
            Do not resize the image, the aspect ratio of the image provided here
            and the printed image should be the same. Set the "Non Power of 2"
            property of Texture2D to none.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.IsStationary">
            <summary>
            Set this to true if the position of this image target in the physical
            world is fixed and its surroundings are planar (ex: walls, floors, tables, etc).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.AutoUpdate">
            <summary>
            Set this to true if the behavior should automatically move the attached game object.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.LongerDimensionInSceneUnits">
            <summary>
            Longer dimension of the printed image target in scene units.
            If width is greater than height, it is the width, height otherwise.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.OnTargetFound">
            <summary>
            Occurs when an existing image target is found. Bool value indicates
            whether the tracking result is good or unreliable.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.OnTargetLost">
            <summary>
            Occurs when the image target is lost.
            </summary>
        </member>
        <member name="E:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.OnTargetUpdated">
            <summary>
            Occurs when the result gets updated for the image target and happens
            once every frame.  This provides the target position, orientation, and
            tracking status.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.Awake">
            <summary>
            Start the image tracker and the image target to the tracking system.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.HandleTargetResult(UnityEngine.XR.MagicLeap.MLImageTarget,UnityEngine.XR.MagicLeap.MLImageTargetResult)">
            <summary>
            Handle the image target result callback. This is called every frame.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.GetTargetLongerDimension(System.Single@)">
            <summary>
            Get the longer dimension of the Image Target.
            This should not be called before the image target is added to the tracker system.
            </summary>
            <param name="longerDimension">longer dimension of the image target in scene units.</param>
            <returns> true if the dimension was successfully fetched, false otherwise.</returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLImageTrackerBehavior.SetTargetLongerDimension(System.Single)">
            <summary>
            Set the longer dimension of the Image Target.
            This method can be used to change the dimension of the image target at runtime.
            This should not be called before the image target is added to the tracker system.
            </summary>
            <param name="longerDimension">longer dimension of the image target in scene units.</param>
            <returns />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraError">
            <summary>
            Camera errors
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.Invalid">
            <summary>
            Invalid state
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.Disabled">
            <summary>
            Camera disabled
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.DeviceFailed">
            <summary>
            Camera device failed
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.ServiceFailed">
            <summary>
            Camera service failed
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.CaptureFailed">
            <summary>
            Capture failed
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraError.Unknown">
            <summary>
            Unknown capture error
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraOutputFormat">
            <summary>
            Captured output format
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutputFormat.YUV_420_888">
            <summary>
            YUV planar format
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutputFormat.JPEG">
            <summary>
            Compressed output stream
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo">
            <summary>
            Per plane info for captured output
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Width">
            <summary>
            Width of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Height">
            <summary>
            Height of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Stride">
            <summary>
            Stride of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.BytesPerPixel">
            <summary>
            Number of bytes used to represent a pixel
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Data">
            <summary>
            Image data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraPlaneInfo.Size">
            <summary>
            Number of bytes in the image output data
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraOutput">
            <summary>
            Captured output
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutput.PlaneCount">
            <summary>
            Number of output image planes:
            - 1 for compressed output such as JPEG stream,
            - 3 for separate color component output such as YUV/YCbCr/RGB.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutput.Planes">
            <summary>
            Output image plane info.
            The number of output planes is specified by PlaneCount.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraOutput.Format">
            <summary>
            Supported output format specified by MLCameraOutputFormat
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.YUVBuffer">
            <summary>
            Contains both the data and information necessary to read the data for a specific buffer in a YUV capture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Width">
            <summary>
            Width of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Height">
            <summary>
            Height of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Stride">
            <summary>
            Stride of the output image in pixels
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.BytesPerPixel">
            <summary>
            Number of bytes used to represent a pixel
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Data">
            <summary>
            Image Data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVBuffer.Size">
            <summary>
            Number of bytes in the image output data
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.YUVFrameInfo">
            <summary>
            Contains the information and data of each of the available buffers/planes in a YUV capture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVFrameInfo.Y">
            <summary>
            Y Buffer information and data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVFrameInfo.U">
            <summary>
            U Buffer information and data
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.YUVFrameInfo.V">
            <summary>
            V Buffer information and data
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraCaptureType">
            <summary>
            Capture operation type
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraCaptureType.Image">
            <summary>
            To capture an image and save the JPEG-compressed data to a file.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraCaptureType.ImageRaw">
            <summary>
            To capture an image and obtain the JPEG-compressed stream.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraCaptureType.Video">
            <summary>
            To capture a video and save it to a file.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraResultExtras">
            <summary>
            ResultExtras is a structure to encapsulate various indices for a capture result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.RequestId">
            <summary>
            An integer to index the request sequence that this result belongs to
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.BurstId">
            <summary>
            An integer to index this result inside a request sequence, starting from 0
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.FrameNumber">
            <summary>
            A 64bit integer to index the frame number associated with this result
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.PartialResultCount">
            <summary>
            The partial result count (index) for this capture result
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLCameraResultExtras.VcamTimestampUs">
            <summary>
            VCam exposure timestamp in microseconds (us)
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraDeviceStatusFlag">
            <summary>
            Client can implement polling mechanism to retrieve device status
            and use these masks to view device status.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraCaptureStatusFlag">
            <summary>
            Client can implement polling mechanism to retrieve capture status
            and use these masks to view capture status.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAEMode">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataColorCorrectionAberrationMode">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAELock">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAWBMode">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAWBLock">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataColorCorrectionMode">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAEAntibandingMode">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataScalerAvailableFormats">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataScalerAvailableStreamConfigurations">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAEState">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraMetadataControlAWBState">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.X0">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.X1">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.X2">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Y0">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Y1">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Y2">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Z0">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Z1">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionTransform.Z2">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.Blue">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.GreenEven">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.GreenOdd">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraColorCorrectionGains.Red">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange.#ctor(System.Int32,System.Int32)">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange.Minimum">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraControlAETargetFPSRange.Maximum">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion">
            <summary />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Left">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Top">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Right">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLCameraScalerCropRegion.Bottom">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLDispatchResult">
            <summary>
            Error code describing the failure state
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLDispatchResult.CannotStartApp">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLDispatchResult.InvalidPacket">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLDispatchResult.NoAppFound">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLDispatchResult.AppPickerDialogFailure">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.DispatchApiNativeBindings">
            <summary>
            See ml_dispatch.h for additional comments
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInvokeFuture">
            <summary>
            MLInvokeFuture represents a type which is opaque (incomplete) to users of this library.
            A pointer to an MLInvokeFuture is returned by the Async function.
            Users pass it to the Wait function to determine if the asynchronous method has
            completed and to retrieve the result if it has.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLIdentityAttributeKey">
            <summary>
            MLIdentityAttributeKey identifies an attribute in a user profile.
            Attributes that were not known at the time the library was built, are marked as Unknown.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLIdentityResult">
            <summary>
            The Identity functions return a MLResult value. If the result does not match
            one of the MLResultGlobal values, it can be safely cast to an MLIdentityResult.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.FailedToConnectToLocalService">
            <summary>
            The local service is not running, or it cannot be accessed.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.FailedToConnectToCloudService">
            <summary>
            The service failed to access the cloud service.
            Either there is no IP connection or the cloud service is not available.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.CloudAuthentication">
            <summary>
            The user does not have the required privileges to use the requesting service
            or the refresh token used by the service is invalid.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.InvalidInformationFromCloud">
            <summary>
            Signature verification failed on the information returned by the cloud or a
            parsing error occurred.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.NotLoggedIn">
            <summary>
            The operation failed because the user is not logged in to the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.ExpiredCredentials">
            <summary>
            The user's credentials have expired.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.FailedToGetUserProfile">
            <summary>
            Failed to retrieve attributes of the user's profile.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.Unauthorized">
            <summary>
            The cloud rejected the operation because the user is not authorized to execute it.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.CertificateError">
            <summary>
            The device failed to authenticate the server.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.RejectedByCloud">
            <summary>
            The cloud rejected the operation.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.AlreadyLoggedIn">
            <summary>
            The user is already logged in.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.ModifyIsNotSupported">
            <summary>
            The cloud does not support modification of an attribute value.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLIdentityResult.NetworkError">
            <summary>
            The device is not connected to a network.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.IdentityApiNativeBindings">
            <summary>
            See ml_identity.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings">
            <summary>
            See ml_image.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings.MLImageType">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.BitMask">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.RGB24">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImageType.RGBA32">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.ImageApiNativeBindings.MLImage">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Width">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Height">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.ImageType">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Alignment">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.ImageApiNativeBindings.MLImage.Image">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings">
            <summary>
            Represents the settings of an Image Target
            All fields are required for an Image Target to be tracked.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.Name">
            <summary>
            Name of the target
            - This name has to be unique across all targets added to the Image Tracker.
            - Caller should allocate memory for this.
            - Encoding should be in UTF8.
            - This will be copied internally.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.LongerDimension">
            <summary>
            LongerDimension refer to the size of the longer dimension of the physical Image
            Target in Unity scene units..
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.IsStationary">
            <summary>
            Set this to \c true to improve detection for stationary targets.
            - An Image Target is a stationary target if its position in the physical
            world does not change.
            - This is best suited for cases where the target is stationary and when the
            local geometry (environment surrounding the target) is planar.
            - When in doubt set this to false.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerTargetSettings.IsEnabled">
            <summary>
            Set this to \c true to track the image target.
            - Disabling the target when not needed marginally improves the tracker CPU
            performance.
            - This is best suited for cases where the target is temporarily not needed.
            If the target no longer needs to be tracked it is best to use remove the
            target.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTrackerImageFormat">
            <summary>
            When adding image targets to the Image Tracker using
            MLImageTrackerAddTargetFromArraySpecify the image format using this enum. </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLImageTrackerSettings">
            <summary>
            Represents the list of Image Tracker settings.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLImageTrackerSettings.MaxSimultaneousTargets">
            <summary>
            Maximum number of Image Targets that can be tracked at any given time.
            If the tracker is already tracking the maximum number of targets
            possible then it will stop searching for new targets which helps
            reduce the load on the CPU. For example, if you are interested in
            tracking a maximum of x targets simultaneously from a list y (x &lt; y)
            targets then set this parameter to x.
            The valid range for this parameter is from 1 through 25.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.ImageTrackerNativeBindings">
            <summary>
            See ml_image_tracking.h for additional comments
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState">
            <summary>
            Gesture state
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState.End">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState.Continue">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureState.Start">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType">
            <summary>
            Recognized touchpad gesture types
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Tap">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceTapDown">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceTapUp">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.ForceDwell">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.SecondForceDown">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.LongHold">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.RadialScroll">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Swipe">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Scroll">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureType.Pinch">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerButton">
            <summary>
            Buttons on device, controller, and Mobile Companion App
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerButton.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerButton.Bumper">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerButton.HomeTap">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerType">
            <summary>
            Types of controllers recognized by Magic Leap platform
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerType.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerType.Control">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerType.MobileApp">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerDof">
            <summary>
            Degrees-of-freedom mode of controller
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerDof.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerDof.Dof3">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerDof.Dof6">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection">
            <summary>
            Direction of touchpad gesture
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Up">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Down">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Right">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.In">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Out">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.Clockwise">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerTouchpadGestureDirection.CounterClockwise">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED">
            <summary>
            Controller LED pattern
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock1">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock2">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock3">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock4">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock5">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock6">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock7">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock8">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock9">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock10">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock11">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock12">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock1And7">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock2And8">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock3And9">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock4And10">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock5And11">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED.Clock6And12">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED">
            <summary>
            Feedback effects for LED target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.RotateCW">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.RotateCCW">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.Pulse">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.PaintCW">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.PaintCCW">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED.Blink">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED">
            <summary>
            Feedback colors for LED target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightMissionRed">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelMissionRed">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightFloridaOrange">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelFloridaOrange">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightLunaYellow">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelLunaYellow">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightNebulaPink">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelNebulaPink">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightCosmicPurple">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelCosmicPurple">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightMysticBlue">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelMysticBlue">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightCelestialBlue">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelCelestialBlue">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.BrightShaggleGreen">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED.PastelShaggleGreen">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED">
            <summary>
            Feedback effect speed for LED target.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Slow">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Medium">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED.Fast">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe">
            <summary>
            Controller vibration pattern
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Click">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Bump">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.DoubleClick">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Buzz">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.Tick">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceDown">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceUp">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.ForceDwell">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe.SecondForceDown">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity">
            <summary>
            Controller vibration intensity
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity.Low">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity.Medium">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity.High">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings">
            <summary>
            See ml_input.h for additional comments.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.PosAndForce">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Type">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Direction">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Speed">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Distance">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.FingerGap">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Radius">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerTouchpadGesture.Angle">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureStartCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureContinueCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureEndCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonDownCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonUpCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnConnectCallback">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnDisconnectCallback">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureStart">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureContinue">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnTouchpadGestureEnd">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonDown">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnButtonUp">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnConnect">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks.OnDisconnect">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputControllerState">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Orientation">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Position">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TouchPosAndForce">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TriggerNormalized">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.ButtonState">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.IsTouchActive">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.IsConnected">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TouchpadGesture">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.TouchpadGestureState">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Type">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.Dof">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputControllerState.HardwareIndex">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.InputNativeBindings.MLInputConfiguration">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputConfiguration.Dof">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MLInputDll">
            <summary>
            ML input DLL name.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MaxControllers">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.MaxControllerTouchpadTouches">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ControllerTouchpadGestureTypeCount">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ControllerTouchpadGestureDirectionCount">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.InputNativeBindings.ButtonCount">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputCreate(System.IntPtr,System.UInt64@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputDestroy(System.UInt64)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputSetControllerCallbacks(System.UInt64,MagicLeapInternal.InputNativeBindings.MLInputControllerCallbacks@,System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputSetControllerCallbacks(System.UInt64,System.IntPtr,System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputGetControllerState(System.UInt64,System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputStartControllerFeedbackPatternLED(System.UInt64,System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.UInt32)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputStartControllerFeedbackPatternEffectLED(System.UInt64,System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackEffectSpeedLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternLED,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackColorLED,System.UInt32)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.InputNativeBindings.MLInputStartControllerFeedbackPatternVibe(System.UInt64,System.Byte,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackPatternVibe,UnityEngine.XR.MagicLeap.MLInputControllerFeedbackIntensity)">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLControllerMode">
            <summary>
            The tracking mode used for the controller.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLControllerCalibAccuracy">
            <summary>
            The calibration accuracy levels for controller.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.Right">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.FarLeft">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLLightingTrackingCamera.FarRight">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.LightingTrackingApiNativeBindings">
            <summary>
            See ml_lighting_tracking.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.LightingTrackingApiNativeBindings.CameraCount">
            <summary>
            Number of cameras.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLResultCode">
            <summary>
            Identifier of Magic Leap API results
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Prefix">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Ok">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Pending">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Timeout">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Locked">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.UnspecifiedFailure">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.InvalidParam">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.AllocFailed">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.PrivilegeDenied">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLResultCode.Last">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLSnapshotResult">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLSnapshotResult.PoseNotFound">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLResult">
            <summary>
            Magic Leap API return value
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLResult.#ctor(UnityEngine.XR.MagicLeap.MLResultCode,System.Func{UnityEngine.XR.MagicLeap.MLResultCode,System.String})">
            <summary />
            <param name="resultCode" />
            <param name="resultStringer">Function used to generate result message</param>
            <exception cref="T:System.ArgumentException">Thrown when resultStringer is null</exception>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLResult.#ctor(UnityEngine.XR.MagicLeap.MLResultCode,System.String)">
            <summary />
            <param name="resultCode" />
            <param name="message" />
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLResult.#ctor(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Create MLResult using MagicLeapInternal.MagicLeapNativeBindings.MLGetResultString
            to generate the message.
            </summary>
            <param name="resultCode" />
            \internal
            TODO: Refactor existing generic constructor calls with MLGetResultString
            to use this constructor instead.
            \endinternal</member>
        <member name="P:UnityEngine.XR.MagicLeap.MLResult.Code">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLResult.IsOk">
            <summary>
            Gets a value indicating whether the result code is MLResultCode.Ok
            Note that in some cases the result can be different than MLResultCode.Ok
            and still valid (e.g. MLResultCode.Pending, MLPrivilegesResult.Granted)
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MLResult.IsCustom">
            <summary>
            Gets a value indicating if the result code should be cast to a
            feature specific result.
            e.g. (MLPurchaseResult)result.Code
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLSnapshot">
            <summary>
            Magic Leap utility perception snapshot functions
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLSnapshot.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code from snapshot internal calls as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings">
            <summary>
            Defines C# API interface to C-API layer
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.#ctor">
            <summary>
            Define constructor private to prevent instantiation of the class through new
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState">
            <summary>
            The current state of a given tracker.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState.Initializing">
            <summary>
            The tracker is not ready, don't use the data.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLSensoryState.Ready">
            <summary>
            The tracker's data can be used.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLVec2f">
            <summary>
            2D vector represented with X and Y floats.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLVec3f">
            <summary>
            3D vector in native format.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLQuaternionf">
            <summary>
            Quaternion in native format.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLTransform">
            <summary>
            Information used to transform from one coordinate frame to another.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLTransform.Rotation">
            <summary>
            The rotation of the coordinate frame to apply after the translation.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLTransform.Position">
            <summary>
            The translation to apply to get the coordinate frame in the proper location.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLMat4f">
            <summary>
            4x4 matrix in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLMat4f.matrix_colmajor">
            <summary>
            The 16 matrix values.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLRectf">
            <summary>
            2D rectangle in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.x">
            <summary>The x coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.y">
            <summary>The y coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.w">
            <summary>The width.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRectf.h">
            <summary>The height.</summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLRecti">
            <summary>
            2D rectangle with integer values in native format.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.x">
            <summary>The x coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.y">
            <summary>The y coordinate.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.w">
            <summary>The width.</summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLRecti.h">
            <summary>The height.</summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLUUID">
            <summary>
            Universally unique identifier
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID">
            <summary>
            A unique identifier which represents a coordinate frame.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.Equals(System.Object)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID.GetHashCode">
            <summary />
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionClientDll">
            <summary>
            Perception library name string.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.MLPlatformDll">
            <summary>
            Platform level library name string.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MagicLeapNativeBindings.InvalidHandle">
            <summary>
            The 64 bit id for an invalid native handle.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLHandleIsValid(System.UInt64)">
            <summary>
            Checks if 64 bit handle is valid.
            </summary>
            <returns>
                <c>true</c>, if handle is valid, <c>false</c> if invalid.</returns>
            <param name="handle">The handle to check.</param>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLGetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Returns an ASCII string for MLResultGlobal codes.
            </summary>
            <param name="result">The input MLResult enum from ML API methods.</param>
            <returns>ASCII string containing readable version of result code.</returns>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionGetSnapshot(System.IntPtr@)">
            <summary>
            Returns pointer to the current MLSnapshot structure
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLPerceptionReleaseSnapshot(System.IntPtr)">
            <summary>
            Releases a previously acquired snapshot from MLPerceptionGetSnapshot
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLSnapshotGetTransform(System.IntPtr,MagicLeapInternal.MagicLeapNativeBindings.MLCoordinateFrameUID@,MagicLeapInternal.MagicLeapNativeBindings.MLTransform@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MagicLeapNativeBindings.MLSnapshotGetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType">
            <summary>
            MusicService Error type
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Connectivity">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Timeout">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.GeneralPlayback">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Privilege">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.ServiceSpecific">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.NoMemory">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceErrorType.Unspecified">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceStatus">
            <summary>
            MusicService status
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.ContextChanged">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.Created">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.LoggedIn">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.LoggedOut">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.NextTrack">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.PrevTrack">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.TrackChanged">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceStatus.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption">
            <summary>
            MusicService playback options
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Playback">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Repeat">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Shuffle">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackOption.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState">
            <summary>
            MusicService playback state
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Playing">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Paused">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Stop">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Error">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState">
            <summary>
            MusicService repeat setting
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.None">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.Song">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.Album">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState">
            <summary>
            MusicService shuffle setting
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState.On">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState.Off">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState.Unknown">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnPlaybackStateChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnRepeatStateChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnShuffleStateChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnMetadataChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnPositionChangeCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnErrorCallback">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnStatusChangeCallback">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnPlaybackStateChange">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnRepeatStateChange">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnShuffleStateChange">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnMetadataChange">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnPositionChange">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnError">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMusicServiceCallbacks.OnStatusChange">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.MusicServiceNativeBindings">
            <summary>
            See ml_music_service.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceDLL">
            <summary>
            ML music dll name.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceConnect(System.String)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceDisconnect">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetCallbacks(System.IntPtr)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetAuthString(System.String)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetURL(System.String)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetPlayList(System.String[],System.UInt64)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceStart">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceStop">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServicePause">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceResume">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSeek(System.UInt32)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceNext">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServicePrevious">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetShuffle(UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetRepeat(UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceSetVolume(System.Single)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetTrackLength(System.UInt32@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetCurrentPosition(System.UInt32@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetStatus(UnityEngine.XR.MagicLeap.MLMusicServiceStatus@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetError(UnityEngine.XR.MagicLeap.MLMusicServiceErrorType@,System.Int32@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetPlaybackState(UnityEngine.XR.MagicLeap.MLMusicServicePlaybackState@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetRepeatState(UnityEngine.XR.MagicLeap.MLMusicServiceRepeatState@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetShuffleState(UnityEngine.XR.MagicLeap.MLMusicServiceShuffleState@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceGetMetadata(UnityEngine.XR.MagicLeap.MLMusicServiceMetadata@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.MusicServiceNativeBindings.MLMusicServiceReleaseMetadata(UnityEngine.XR.MagicLeap.MLMusicServiceMetadata@)">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPassableWorldResult">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPassableWorldResult.Prefix">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPassableWorldResult.LowMapQuality">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPassableWorldResult.UnableToLocalize">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPassableWorldResult.ServerUnavailable">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.PlanesApiNativeBindings">
            <summary>
            See ml_planes.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.RaycastApiNativeBindings">
            <summary>
            See ml_raycast.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.SecureStorageApiNativeBindings">
            <summary>
            See ml_secure_storage.h for additional comments
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLTokenAgentResult">
            <summary>
            MLTokenAgentError is the return value type of some of the MLTokenAgent functions.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.FailedToConnectToLocalService">
            <summary>
            The local binder service was not found.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.ServiceNotStarted">
            <summary>
            The local binder service is running but has not been registered by the login service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.FailedToConnectToCloud">
            <summary>
            The local binder service failed to connect to the cloud service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.CloudAuthentication">
            <summary>
            The cloud service rejected the request due to inappropriate credentials.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.FailedToLogin">
            <summary>
            The local server failed to log in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.LoginNotBegun">
            <summary>
            An attempt to complete the login was begun without starting the login.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.NotLoggedIn">
            <summary>
            The operation was rejected because the local server was not logged in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.AlreadyLoggedIn">
            <summary>
            The login request failed because the local server is already logged in with the cloud.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.LoginInProgress">
            <summary>
            The login request request failed because a login is already in progress.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.FailedToStartIdentityService">
            <summary>
            Having completed the login process with the cloud successfully, the service failed to
            start the local identity service.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.DeviceNotRegistered">
            <summary>
            The serial number of the device is not recognized by the cloud so login failed.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLTokenAgentResult.DeviceNotConnected">
            <summary>
            The device is not yet connected to the cloud so login failed.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.TokenAgentApiNativeBindings">
            <summary>
            See ml_token_agent.h for additional comments
            </summary>
        </member>
        <member name="T:MagicLeapInternal.EyeApiNativeBindings">
            <summary>
            See ml_eye_tracking.h for additional comments
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLScreensResult">
            <summary>
            Error code describing the failure state
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLScreensResult.ServiceNotAvailable">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.ScreensNativeBindings">
            <summary>
            See ml_screens.h for additional comments
            </summary>
        </member>
        <member name="P:MagicLeapInternal.ScreensNativeBindings.MLScreensWatchHistoryEntry.IsValid">
            <summary>
            Entry is valid if:
            * PlaybackPositionMs is smaller or equal to PlaybackDurationMs.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHeadTrackingError">
            <summary>
            A set of possible error conditions that can cause Head Tracking to
            be less than ideal.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.None">
            <summary>
            No error, tracking is nominal.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.NotEnoughFeatures">
            <summary>
            There are not enough features in the environment.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.LowLight">
            <summary>
            Lighting in the environment is not sufficient to track accurately.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingError.Unknown">
            <summary>
            Head tracking failed for an unkown reason.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHeadTrackingMode">
            <summary>
            A set of possible tracking modes the Head Tracking system can be in.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMode.Mode6DOF">
            <summary>
            Full 6 degrees of freedom tracking (position and orientation).
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingMode.Mode3DOF">
            <summary>
            Limited 3 degrees of freedom tracking (orientation only).
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHeadTrackingState">
            <summary>
            A structure containing information on the current state of the
            Head Tracking system.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingState.Mode">
            <summary>
            What tracking mode the Head Tracking system is currently in.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingState.Confidence">
            <summary>
            A confidence value (from 0..1) representing the confidence in the
            current pose estimation.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHeadTrackingState.Error">
            <summary>
            Represents what tracking error (if any) is present.
            </summary>
        </member>
        <member name="T:MagicLeapInternal.HeadApiNativeBindings">
            <summary>
            See ml_head_tracking.h for additional comments.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.Unknown">
            <summary>
            Unkown status
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.StartedAsNext">
            <summary>
            The player was started because it was used as the next player
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.RenderingStart">
            <summary>
            The player just pushed the very first video frame for rendering
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.Looping">
            <summary>
            The player just reached EOS and started from beginning loop.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.VideoTrackLagging">
            <summary>
            The video is too complex for the decoder: it can't decode frames fast enough
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.BufferingStart">
            <summary>
            Media player is temporarily pausing playback
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.BufferingEnd">
            <summary>
            Media player is resuming playback after filling buffers
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.NetworkBandwidth">
            <summary>
            Network bandwidth info
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.BadInterleaving">
            <summary>
            Bad interleaving means that a media has been improperly interleaved
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.NotSeekable">
            <summary>
            The media is not seekable e.g live stream
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.MetadataUpdate">
            <summary>
            New media metadata is available
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerInfo.TimedTextError">
            <summary>
            Media timed text error
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerResult.ServerDied">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaPlayerResult.NotValidForProgressivePlayback">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaDRMKeyType.Streaming">
            <summary>
            This key request type specifies that the keys will be for online use, they will
            not be saved to the device for subsequent use when the device is not connected to a network.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaDRMKeyType.Offline">
            <summary>
            This key request type specifies that the keys will be for offline use, they
            will be saved to the device for use when the device is not connected to a network.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaDRMKeyType.Release">
            <summary>
            This key request type specifies that previously saved offline keys should be released.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.InvalidOperation">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.BadType">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.NameNotFound">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.HandleNotFound">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.NoInit">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.AlreadyExists">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.DeadObject">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.FailedTransaction">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.BadIndex">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.NotEnoughData">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.WouldBlock">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.UnknownTransaction">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.FDSNotAllowed">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLMediaGenericResult.UnexpectedNull">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandKeyPose">
            <summary>
            Static key pose types which are available when both hands are separated.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Finger">
            <summary>Index finger.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Fist">
            <summary>A closed fist.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Pinch">
            <summary>A pinch.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Thumb">
            <summary>A closed fist with the thumb pointed up.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.L">
            <summary>An L shape</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.OpenHandBack">
            <summary>An open hand with the back of the hand facing the user.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.Ok">
            <summary>A pinch with all fingers, except the index finger and the thumb, extended out.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.C">
            <summary>A rounded 'C' alphabet shape.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.NoPose">
            <summary>No pose was recognized.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandKeyPose.NoHand">
            <summary>No hand was detected.  Should be the last pose.</summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel">
            <summary>Configured level for keypoints filtering of keypoints and hand centers.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel.Raw">
            <summary>Default value, no filtering is done, the points are raw.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel.Smoothed">
            <summary>Some smoothing at the cost of latency.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLKeyPointFilterLevel.ExtraSmoothed">
            <summary>Predictive smoothing, at higher cost of latency.</summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPoseFilterLevel">
            <summary>Configured level of filtering for static poses.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPoseFilterLevel.Raw">
            <summary>Default value, No filtering, the poses are raw.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPoseFilterLevel.Robust">
            <summary>Some robustness to flicker at some cost of latency.</summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPoseFilterLevel.ExtraRobust">
            <summary>More robust to flicker at higher latency cost.</summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLHandType">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandType.Left">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLHandType.Right">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MagicLeapDevice">
            <summary>
            MagicLeap device class responsible for updating all trackers when they register and are enabled.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MagicLeapDevice.MAGIC_LEAP_DEVICE_NAME">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.WorldScale">
            <summary>
            The last scale assigned from the main camera's parent
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.HeadTrackingState">
            <summary />
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.PlatformLevel">
            <summary>
            Platform API Level that the OS supports.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.DefaultNearClipDistance">
            <summary>
            The default value that should be used for the Camera's near clipping plane.
            </summary>
        </member>
        <member name="P:UnityEngine.XR.MagicLeap.MagicLeapDevice.MinimumNearClipDistance">
            <summary>
            The lowest value that can be assigned to the Camera's near clipping plane.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Awake">
            <summary>
            Initializes the Magic Leap device state.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnEnable">
            <summary>
            Subscribes to Unity events necessary for the device's operation.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnDisable">
            <summary>
            Cleans up event subscriptions that are no longer necessary.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnDestroy">
            <summary>
            Cleans up any resources the object has open.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.OnApplicationPause(System.Boolean)">
            <summary>
            Callback sent to all game objects when the player pauses.
            </summary>
            <param name="pauseStatus">The pause state of the application.</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Update">
            <summary>
            Updates the perception snapshot and emits an event to inform subscribers of the updated state.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.IsReady">
            <summary>
            Check if underlying Unity VR Device setup is ready
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Register(System.Action{System.Single,System.IntPtr})">
            <summary>
            Register a MagicLeap API Update callback to be called on Update of this MonoBehaviour.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterOnApplicationPause(System.Action{System.Boolean})">
            <summary>
            Register a MagicLeap API application pause callback to be called OnApplicationPause of this MonoBehaviour.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.Unregister(System.Action{System.Single,System.IntPtr})">
            <summary>
            Unregister a previously registered MagicLeap API Update callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterOnApplicationPause(System.Action{System.Boolean})">
            <summary>
            Unregister a previously registered MagicLeap API application pause callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterHeadTrackingModeChanged(System.Action{UnityEngine.XR.MagicLeap.MLHeadTrackingState})">
            <summary>
            Registers a callback to be called when only rotation head pose is available,
            or when full head pose is available again.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterHeadTrackingModeChanged(System.Action{UnityEngine.XR.MagicLeap.MLHeadTrackingState})">
            <summary>
            Unregisters a previously registered head tracking mode change callback.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UpdateWorldScale">
            <summary>
            Apply the world scale set on the current main camera's parent.
            </summary>
            <returns>
            True if the scale was set false if the main camera or main camera parent was not found.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.RegisterEndOfFrameUpdate(System.Action)">
            <summary>
            Register a function to be executed per frame at the end of every frame, after all cameras and GUI is rendered
            but before displaying the frame on screen
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MagicLeapDevice.UnregisterEndOfFrameUpdate(System.Action)">
            <summary>
            Unregister a function to no longer be executed at the end of the frame
            </summary>
        </member>
        <member name="T:MagicLeapInternal.MLConvert">
            <summary>
            Utility class used for converting vectors and matrices between native and unity format.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(System.Single)">
            <summary>
            Gets a float value converted from meters to Unity units.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLVec3f,System.Boolean,System.Boolean)">
            <summary>
            Creates a Unity 3D vector from a native vector.
            </summary>
            <param name="vec">A native vector.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
            Creates a Unity 3D vector from a x, y and z parameters.
            </summary>
            <param name="x">X component</param>
            <param name="y">Y component</param>
            <param name="z">Z component</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLQuaternionf,System.Boolean)">
            <summary>
            Creates a Unity quaternion from a native vector.
            </summary>
            <param name="quat">A native quaternion.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <returns>A Unity quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLMat4f)">
            <summary>
            Creates Unity 4x4 matrix from native matrix.
            </summary>
            <param name="mat">A native matrix.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLTransform,System.Boolean,System.Boolean)">
            <summary>
            Creates Unity 4x4 matrix from native transform.
            </summary>
            <param name="transform">A native transform.</param>
            <param name="transformToRUF">(Optional) If false, prevents conversion to Unity's coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to Unity's unit per meter scale.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUnity(MagicLeapInternal.MagicLeapNativeBindings.MLUUID)">
            <summary>
            Creates a System.Guid from an MLUUID
            </summary>
            <param name="uuid">A native UUID</param>
            <returns>A Sytem.Guid</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Matrix4x4,System.Boolean,System.Boolean)">
            <summary>
            Creates native transform from a Unity matrix.
            </summary>
            <param name="mat">A Unity matrix.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to the native SDK's unit per meter scale.</param>
            <returns>A native transform.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Matrix4x4,System.Single[]@)">
            <summary>
            Fills out array with values from 4x4 Unity matrix.
            </summary>
            <param name="mat">An input native matrix.</param>
            <param name="matrixColMajor">An array to populate in Unity format.</param>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Vector3,System.Boolean,System.Boolean)">
            <summary>
            Creates native 3d vector from a Unity vector.
            </summary>
            <param name="vec">A Unity vector.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <param name="applyScale">(Optional) If false, prevents scaling to the native SDK's unit per meter scale.</param>
            <returns>A native vector.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(UnityEngine.Quaternion,System.Boolean)">
            <summary>
            Creates native quaternion from a Unity quaternion.
            </summary>
            <param name="quat">A Unity quaternion.</param>
            <param name="transformFromRUF">(Optional) If false, prevents conversion to the native SDK coordinate system.</param>
            <returns>A native quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(System.Single)">
            <summary>
            Gets a float value converted from Unity units to meters.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FromUnity(System.Guid)">
            <summary>
            Creates an MLUUID from a System.Guid
            </summary>
            <param name="guid">A System.Guid</param>
            <returns>A native MLUUID</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.FloatsToMat(System.Single[])">
            <summary>
            Creates Unity 4x4 matrix from an array of 16 floats.
            </summary>
            <param name="vals">An array of 16 floats.</param>
            <returns>A Unity matrix.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.GetPositionFromTransformMatrix(UnityEngine.Matrix4x4)">
            <summary>
            Gets the position vector stored in a transform matrix.
            </summary>
            <param name="transformMatrix">A Unity matrix treated as a transform matrix.</param>
            <returns>A Unity vector representing a position.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.GetRotationFromTransformMatrix(UnityEngine.Matrix4x4)">
            <summary>
            Gets the rotation quaternion stored in a transform matrix.
            </summary>
            <param name="transformMatrix">A Unity matrix treated as a transform matrix.</param>
            <returns>A Unity quaternion.</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.ToUTF8Snipped(System.String,System.Int32)">
            <summary>Take a string, snips it to a desired length and converts it to UTF8.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeAscii(System.Byte[])">
            <summary>Decodes a buffer of bytes into an Ascii string.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeUTF8(System.Byte[])">
            <summary>Decodes a buffer of bytes into a UTF8 string.</summary>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.EncodeToUnmanagedUTF8(System.String)">
            <summary>
            Converts a managed string into an unmanaged null terminated UTF-8 string.
            </summary>
            <param name="s">The managed string to convert</param>
            <returns>A pointer to the unmanaged string</returns>
        </member>
        <member name="M:MagicLeapInternal.MLConvert.DecodeUTF8(System.IntPtr)">
            <summary>
            Converts an unmanaged null terminated UTF-8 string into a managed string.
            </summary>
            <param name="nativeString">The unmanaged string to convert</param>
            <returns>A managed string</returns>
        </member>
        <member name="T:MagicLeapInternal.MLTextureUtils">
            <summary>
            Class containing utility functions to convert Unity Texture to Lumin OS compatible data structures.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.MLTextureUtils.ConvertToByteArray(UnityEngine.Texture2D,System.Int32@)">
            <summary>
            Convert Unity Texture2D to a byte array.
            Texture2D should be in one of the following formats: DXT1, RGBA32, RGB24.
            For DXT1 and RGBA32, resulting byte array is in RGBA format.
            For RGB24, resulting byte array is in RGB format.
            The origin of the byte array will be at the top left corner.
            Returns null on unsupported formats.
            </summary>
            <param name="texture">Texture to extract byte array from</param>
            <param name="numChannels">Out parameter to determine how many bytes per pixel</param>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPrivilegeId">
            <summary>
            Privilege Types:
            AutoGranted - Once it is included in the manifest the application is granted the privilege.
            Sensitive - Must be requested at runtime, as well as in the manifest, because it requires user consent on first use.
            Reality - Must be requested at runtime and every time the application gains focus, as well as in the manifest, because it requires user consent every active session.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.Invalid">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.AudioRecognizer">
            <summary>
            Open a microphone stream for voice recognition.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.BatteryInfo">
            <summary>
            Query battery status/percentage.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.CameraCapture">
            <summary>
            Take pictures and videos using camera.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.WorldReconstruction">
            <summary>
            Access dense map.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.InAppPurchase">
            <summary>
            Use the in-app purchase mechanism.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.AudioCaptureMic">
            <summary>
            Open a microphone stream of the users voice or the ambient surroundings.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.DrmCertificates">
            <summary>
            Provision and use DRM certficates.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.Occlusion">
            <summary>
            TODO: Remove This!.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.LowLatencyLightwear">
            <summary>
            Access Low Latency data from the Lightwear.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.Internet">
            <summary>
            Access the internet.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.IdentityRead">
            <summary>
            Read user profile attributes.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.BackgroundDownload">
            <summary>
            Download in the background.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.BackgroundUpload">
            <summary>
            Upload in the background.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.PowerInfo">
            <summary>
            Get power information.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.LocalAreaNetwork">
            <summary>
            Access other entities on the local network.
            Type: Sensitive
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.VoiceInput">
            <summary>
            Receive voice input.
            Type: Reality
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.ConnectBackgroundMusicService">
            <summary>
            Connect to Background Music Service.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.RegisterBackgroundMusicService">
            <summary>
            Register with Background Music Service.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.PwFoundObjRead">
            <summary>
            Read found objects from Passable World.
            Type: Sensitive
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.NormalNotificationsUsage">
            <summary>
            Post notifications for users to see, dismiss own notifications, listen for own notification events.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.MusicService">
            <summary>
            Access Music Service functionality.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.ControllerPose">
            <summary>
            Access controller pose data.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.ScreensProvider">
            <summary>
            Create channels in the screens framework'.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.GesturesSubscribe">
            <summary>
            Subscribe to gesture hand mask and config data.
            Type: AutoGranted
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegeId.GesturesConfig">
            <summary>
            Set/Get gesture configuration.
            Type: AutoGranted
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId">
            <summary>
            Privilege ids that need to be requested at runtime in addition
            to being specified in the app manifest. Descriptions for each
            value can be found in MLPrivilegeId enum.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.AudioCaptureMic">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.AudioRecognizer">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.CameraCapture">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.LocalAreaNetwork">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.PwFoundObjRead">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLRuntimeRequestPrivilegeId.VoiceInput">
            <summary />
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPrivileges">
            <summary>
            Stores the current input information and sends input events.
            </summary>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery">
            <summary>
            Wrapper for the Async Request
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.Callback">
            <summary>
            Query result callback.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.PrivilegeId">
            <summary>
            The requested privilege.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.Result">
            <summary>
            The result.
            </summary>
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeQuery.Request">
            <summary>
            The Async Request IntPtr.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.CreateInstance">
            <summary>
            static instance of the MLPrivileges class
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.Start">
            <summary>
            Privileges API, must be called
            </summary>
            <returns>
            MLResult.Code will be MLResultCode.Ok if the privilege system startup succeeded.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system failed to startup.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.StartAPI">
            <summary>
            Starts the Privileges, Must be called to start checking for
            privileges at runtime.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.CleanupAPI(System.Boolean)">
            <summary>
            Cleans up unmanaged memory.
            </summary>
            <param name="isSafeToAccessManagedObjects">Boolean that tells if it is safe to clear managed memory</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.Update(System.Single,System.IntPtr)">
            <summary>
            Polls for the result of pending privileges requests.
            </summary>
            <param name="timeDelta">The time in seconds it took to complete the last frame.</param>
            <param name="perceptionSnapshot">The current perception snapshot</param>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.CheckPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
            <summary>
            Checks whether the application has the specified privileges.
            This does not solicit consent from the end-user.
            </summary>
            <returns>
            MLResult.Code will be MLPrivilegesResult.Granted if the privilege is granted.
            MLResult.Code will be MLPrivilegesResult.Denied if the privilege is denied.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system was not started.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
            <summary>
            Requests the specified privileges. This may possibly solicit consent
            from the end-user.
            </summary>
            <returns>
            MLResult.Code will be MLPrivilegesResult.Granted if the privilege is granted.
            MLResult.Code will be MLPrivilegesResult.Denied if the privilege is denied.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system was not started.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeAsync(UnityEngine.XR.MagicLeap.MLPrivilegeId,System.Action{UnityEngine.XR.MagicLeap.MLResult,UnityEngine.XR.MagicLeap.MLPrivilegeId})">
            <summary>
            Request the specified privileges. This may solicit consent from the end-user.
            </summary>
            <param name="privilegeId">
            </param>
            <param name="callback">
            Callback to be executed when the privilege request has completed.
            The MLResult.Code returned could be one of the following:
            - MLPrivilegesResult.Granted if the privilege is granted.
            - MLPrivilegesResult.Denied if the privilege is denied.
            - MLResultCode.UnspecifiedFailure if the privilege system was not started.
            </param>
            <returns>
            MLResult.Code will be MLResultCode.Ok if the privilege request is in progress.
            MLResult.Code will be MLResultCode.InvalidParam if request is a null pointer or the callback is not valid.
            MLResult.Code will be MLResultCode.UnspecifiedFailure if the privilege system was not started.
            </returns>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.ProcessPendingQueries">
            <summary>
            Process pending requests and call the callback specified in the startup config.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.ProcessCompletedQueries">
            <summary>
            Go through all completed queries and publish their results also clean them up.
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.RequestPrivilegeStatus(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
            <summary>
            Try to get the result from a privilege request. The request object is internally freed when
            the result is ready (i.e. retval is either MLPrivilegesResult.Granted or MLPrivilegesResult.Denied).
            </summary>
        </member>
        <member name="M:UnityEngine.XR.MagicLeap.MLPrivileges.GetResultString(UnityEngine.XR.MagicLeap.MLResultCode)">
            <summary>
            Gets a readable version of the result code as an ASCII string.
            </summary>
            <param name="result">The MLResult that should be converted.</param>
            <returns>ASCII string containing a readable version of the result code.</returns>
        </member>
        <member name="T:UnityEngine.XR.MagicLeap.MLPrivilegesResult">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegesResult.Granted">
            <summary />
        </member>
        <member name="F:UnityEngine.XR.MagicLeap.MLPrivilegesResult.Denied">
            <summary />
        </member>
        <member name="T:MagicLeapInternal.PrivilegesApiNativeBindings">
            <summary>
            See ml_privileges.h for additional comments.
            </summary>
        </member>
        <member name="F:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesDll">
            <summary>
            ML privileges DLL name.
            </summary>
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesStartup">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesShutdown">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesCheckPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesRequestPrivilege(UnityEngine.XR.MagicLeap.MLPrivilegeId)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesRequestPrivilegeAsync(UnityEngine.XR.MagicLeap.MLPrivilegeId,System.IntPtr@)">
            <summary />
        </member>
        <member name="M:MagicLeapInternal.PrivilegesApiNativeBindings.MLPrivilegesRequestPrivilegeTryGet(System.IntPtr)">
            <summary />
        </member>
    </members>
</doc>
